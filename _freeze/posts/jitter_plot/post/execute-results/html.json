{
  "hash": "12fb69d9da8bd4fd19677c9e5a2ded0d",
  "result": {
    "markdown": "---\ntitle: \"Daily Data Visualization with R: Jitter Plot\"\ndate: \"2024-06-28\"\ncategories: ['R', 'ggplot2', 'data visualization', 'tidyverse', 'health', 'jitter']\ndescription: \"A detailed guide on using geom_jitter() to visualize BMI distributions across sex using data from the Spanish European Health Survey 2020.\"\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\nformat: \n  html\n---\n\n\n# Introduction\n\nData visualization is a powerful tool in understanding complex datasets, especially in the field of public health. In this tutorial, we will use Quarto and R to create a **jitter plot**, which is especially useful for visualizing the distribution of data points along a continuous axis. Jitter plots help to overcome the issue of overlapping points by adding a small amount of random noise to each point.\n\nIn this blog post, we will explore how to use the `geom_jitter()` function from the `ggplot2` package in R to visualize the relationship between sex and Body Mass Index (BMI) distributions using data from the Spanish European Health Survey 2020, discussed in a [previous post](https://carlosepistats.github.io/blog/posts/bmi_spain_2020/post.html).\n\n## Load Libraries\n\nFirst, we load the necessary libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  tidyverse\n)\n```\n:::\n\n\n# Import and Clean Data\n\nTo begin, we import the dataset from the Spanish European Health Survey 2020 and perform necessary data cleaning steps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_2020 <- \"MICRODATOS_PUBLICACION_CADULTO.txt\"\n\n# Read using read_fwf\ndata_raw <- read_fwf(\n  file_2020,\n  col_positions = fwf_cols(\n    sex = c(13, 13),\n    age = c(14, 16),\n    height = c(369, 371),\n    weight = c(372, 374)\n  ),\n  col_types = \"iiii\", # set all columns as integers\n  na = c(\"998\",\"999\") # Missing values encoded as 998 (doesn't know) or 999 (doesn't answer)\n) \n\n# Clean data and calculate BMI\ndata_clean <- data_raw |>\n  mutate(\n    sex = factor(sex, labels = c(\"Male\", \"Female\")),\n    bmi = weight / (height/100) ^ 2\n  ) \n\nglimpse(data_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 22,072\nColumns: 5\n$ sex    <fct> Male, Female, Male, Female, Male, Female, Female, Female, Male,…\n$ age    <int> 60, 87, 38, 43, 41, 34, 60, 79, 87, 82, 77, 44, 47, 16, 48, 25,…\n$ height <int> 175, NA, 174, 164, 169, 167, 159, 150, 178, NA, 155, 184, 181, …\n$ weight <int> 74, NA, 80, 58, 74, 90, NA, 73, 72, 64, NA, 86, 85, 56, 67, 87,…\n$ bmi    <dbl> 24.16327, NA, 26.42357, 21.56454, 25.90946, 32.27079, NA, 32.44…\n```\n:::\n:::\n\n\n# Visualize Data\n\nNext, we create a visualization to explore the relationship between sex and BMI.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a random sample of 1000 participants for better visualization\nset.seed(123)\ndata_sample <- data_clean |> \n  slice_sample(n = 1000)\n\n# Create jitter plot using ggplot2 \ndata_sample |> \n  ggplot(aes(x = bmi, y = sex, color = sex)) +\n  geom_jitter(alpha = 0.7) +\n  geom_vline(xintercept = c(25, 30), linetype = \"dashed\") +\n  scale_x_continuous(\n    limits = c(15, 50),\n    breaks = seq(15, 50, 5)\n  ) +\n  theme_classic() +\n  theme(legend.position = \"none\") +\n  labs(\n    x = \"Body Mass Index (kg/m²)\", \n    y = \"Sex\",\n    title = \"Adult Males Tend to Have Higher BMI than Females\",\n    subtitle = \"Excess Weight is Highly Prevalent in Both Sexes\",\n    caption = \"Dashed lines represent thresholds of overweight (25 kg/m²) and obesity (30 kg/m²).\\nData source: random sample of 1000 participants in the Spanish European Health Survey 2020.\"\n  ) \n```\n\n::: {.cell-output-display}\n![](post_files/figure-html/plots-1.png){width=672}\n:::\n:::\n\n\n# Plot Interpretation\n\nThe jitter plot above visualizes the distribution of Body Mass Index (BMI) across sexes based on a random sample of 1000 participants from the Spanish European Health Survey 2020. Each point represents an individual's BMI, with female data points in blue and male data points in red. The dashed lines at BMI values of 25 and 30 represent thresholds for overweight and obesity, respectively.\n\nThe jitter plot provides a visual representation of how BMI varies between males and females in the surveyed population. It highlights the prevalence of excess weight (overweight and obesity) in both sexes, with males tending to have higher average BMI compared to females.\n\nWhen using jitter plots, we need to take into account the following pros and cons.\n\n## Pros of Jitter Plots\n\n* **Preserves Individual Data Points:** `geom_jitter()` displays each data point individually, making it suitable for visualizing the distribution of discrete data or small datasets.\n\n* **Handles Overplotting:** It adds a small amount of random noise to data points, reducing overplotting and providing a clearer view of the distribution.\n\n* **Suitable for Categorical or Discrete Variables:** Particularly useful when visualizing relationships between a continuous variable (like BMI) and a categorical variable (like sex).\n\n## Cons of Jitter Plots\n\n* **Limited for Large Datasets:** When dealing with large datasets, `geom_jitter()` can become cluttered, making it challenging to interpret the density of data points accurately. That's why we have sampled a subset of the original dataset for creating this visualization. For larger datasets, `geom_density()` or `geom_histogram()` might provide a clearer view.\n\n* **Not Suitable for Exact Data Counting:** Because it spreads points out to avoid overlap, it can obscure the true density of data points in a specific region.\n\n# Conclusion\n\nJitter plots are valuable for visualizing the distribution of data points, especially when dealing with overlapping data in datasets of limited size. By using `ggplot2` and `geom_jitter()`, we can effectively explore and communicate insights from complex datasets such as health surveys.\n\n# References:\n\n-   [Encuesta Europea de Salud en España 2020](https://www.sanidad.gob.es/estadEstudios/estadisticas/EncuestaEuropea/Enc_Eur_Salud_en_Esp_2020.htm)\n-   [EpiStats Blog. Load Data from the National Health Survey Spain 2020](https://carlosepistats.github.io/blog/posts/bmi_spain_2020/post.html)\n",
    "supporting": [
      "post_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}