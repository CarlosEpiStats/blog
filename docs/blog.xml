<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>EpiStats</title>
<link>https://CarlosEpiStats.github.io/blog/blog.html</link>
<atom:link href="https://CarlosEpiStats.github.io/blog/blog.xml" rel="self" type="application/rss+xml"/>
<description>A blog about Epidemiology and Biostatistics by Carlos Fernández-Escobar, MD MPH.</description>
<generator>quarto-1.3.353</generator>
<lastBuildDate>Thu, 18 Jul 2024 22:00:00 GMT</lastBuildDate>
<item>
  <title>Enhancing Survival Analysis in R with Custom Functions</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/survival/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Survival analysis is a critical aspect of statistical research, particularly in medical studies where time-to-event data, such as patient survival times, are analyzed. The primary goal is to understand and visualize the survival probability over time, often comparing different groups.</p>
<p>While R provides robust packages for survival analysis, automating and simplifying these tasks through custom functions can save time and reduce errors. This blog post introduces a set of custom functions in R designed to streamline survival analysis, from fitting survival models to plotting Kaplan-Meier curves with p-values.</p>
<section id="introduction-to-the-code" class="level2">
<h2 class="anchored" data-anchor-id="introduction-to-the-code">Introduction to the Code</h2>
<p>The R code presented here comprises a series of custom functions that facilitate the steps involved in survival analysis. The functions leverage libraries like <code>tidyverse</code>, <code>survival</code>, <code>ggfortify</code>, and <code>scales</code>. Here’s a breakdown of what each function does:</p>
</section>
<section id="loading-necessary-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-necessary-libraries">Loading Necessary Libraries</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(survival)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggfortify)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span></code></pre></div>
</div>
<p>These libraries are essential for data manipulation (<code>tidyverse</code>), survival analysis (<code>survival</code>), plotting (<code>ggfortify</code>), and formatting scales in plots (<code>scales</code>).</p>
</section>
<section id="custom-functions-for-survival-analysis" class="level2">
<h2 class="anchored" data-anchor-id="custom-functions-for-survival-analysis">Custom Functions for Survival Analysis</h2>
<section id="fitting-a-survival-object-get_survival_analysis" class="level3">
<h3 class="anchored" data-anchor-id="fitting-a-survival-object-get_survival_analysis">1. Fitting a Survival Object: <code>get_survival_analysis</code></h3>
<p>This function fits a survival object using the <code>survfit</code> function from the <code>survival</code> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">get_survival_analysis <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(time, event, group, data){</span>
<span id="cb2-2">  params <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb2-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(time),</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">event =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(event),</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(group),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(data)</span>
<span id="cb2-7">  )</span>
<span id="cb2-8">  expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survfit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(time, event) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data), params)</span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval.parent</span>(expr)</span>
<span id="cb2-10">}</span></code></pre></div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><p><strong>Purpose:</strong> Fits a survival model to the data.</p></li>
<li><p><strong>Parameters:</strong> <code>time</code> (time to event), <code>event</code> (event status), <code>group</code> (grouping variable), <code>data</code> (dataset).</p></li>
<li><p><strong>Functionality:</strong> Creates a survival object by substituting the parameters into the <code>survfit</code> function and evaluating it in the parent environment.</p></li>
</ul>
</section>
<section id="obtaining-p-values-from-log-rank-test-get_p_log_rank" class="level3">
<h3 class="anchored" data-anchor-id="obtaining-p-values-from-log-rank-test-get_p_log_rank">2. Obtaining p-values from Log-Rank Test: <code>get_p_log_rank</code></h3>
<p>This function performs a log-rank test to compare survival curves between groups.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">get_p_log_rank <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(time, event, group, data){</span>
<span id="cb3-2">  params <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(time),</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">event =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(event),</span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(group),</span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(data)</span>
<span id="cb3-7">  )</span>
<span id="cb3-8">  expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survdiff</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(time, event) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data), params)</span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval.parent</span>(expr)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvalue</span>
<span id="cb3-10">}</span></code></pre></div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><p><strong>Purpose:</strong> Obtains the p-value from a log-rank test.</p></li>
<li><p><strong>Parameters:</strong> Same as <code>get_survival_analysis</code>.</p></li>
<li><p><strong>Functionality:</strong> Substitutes the parameters into the <code>survdiff</code> function to perform the log-rank test and extracts the p-value.</p></li>
</ul>
</section>
<section id="rounding-p-values-round_p" class="level3">
<h3 class="anchored" data-anchor-id="rounding-p-values-round_p">3. Rounding p-values: <code>round_p</code></h3>
<p>This utility function rounds p-values to three decimal places.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">round_p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(p){</span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(p, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nsmall =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb4-3">}</span></code></pre></div>
</div>
</section>
<section id="creating-kaplan-meier-plots-with-p-values-make_kaplan_meier" class="level3">
<h3 class="anchored" data-anchor-id="creating-kaplan-meier-plots-with-p-values-make_kaplan_meier">4. Creating Kaplan-Meier Plots with p-values: <code>make_kaplan_meier</code></h3>
<p>This function creates a Kaplan-Meier plot with an annotated p-value.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">make_kaplan_meier <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(surv_object, p_value, xcoord, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ycoord =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>){</span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>(surv_object, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun =</span> fun) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb5-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xcoord, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> ycoord,</span>
<span id="cb5-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-value: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round_p</span>(p_value))</span>
<span id="cb5-6">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_percent</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Follow-up time (days)"</span>,</span>
<span id="cb5-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Group"</span></span>
<span id="cb5-12">    )</span>
<span id="cb5-13">}</span></code></pre></div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><p><strong>Purpose:</strong> Draws a Kaplan-Meier survival curve with the p-value annotation.</p></li>
<li><p><strong>Parameters:</strong> <code>surv_object</code> (survival object), <code>p_value</code> (p-value from log-rank test), <code>xcoord</code> (x-coordinate for annotation), <code>ycoord</code> (y-coordinate for annotation), <code>fun</code> (optional transformation function for survival probabilities).</p></li>
<li><p><strong>Functionality:</strong> Uses <code>autoplot</code> to create the plot, adds a p-value annotation, and customizes the plot’s appearance.</p></li>
</ul>
</section>
<section id="performing-comprehensive-survival-analysis-make_survival_analysis" class="level3">
<h3 class="anchored" data-anchor-id="performing-comprehensive-survival-analysis-make_survival_analysis">5. Performing Comprehensive Survival Analysis: <code>make_survival_analysis</code></h3>
<p>This function integrates all the above steps into a single workflow.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">make_survival_analysis <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(time, event, group, data, xcoord, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ycoord =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>){</span>
<span id="cb6-2">  params <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(time),</span>
<span id="cb6-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">event =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(event),</span>
<span id="cb6-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(group),</span>
<span id="cb6-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(data)</span>
<span id="cb6-7">  )</span>
<span id="cb6-8">  expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_survival_analysis</span>(time, event, group, data), params)</span>
<span id="cb6-9">  surv_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval.parent</span>(expr)</span>
<span id="cb6-10">  </span>
<span id="cb6-11">  expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_p_log_rank</span>(time, event, group, data), params)</span>
<span id="cb6-12">  p_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval.parent</span>(expr)</span>
<span id="cb6-13">  </span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_kaplan_meier</span>(surv_fit, p_value, xcoord, ycoord, fun)</span>
<span id="cb6-15">}</span></code></pre></div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><p><strong>Purpose:</strong> Performs the complete survival analysis, including model fitting, p-value calculation, and plotting.</p></li>
<li><p><strong>Parameters:</strong> Same as <code>get_survival_analysis</code> with additional plotting coordinates and transformation function.</p></li>
<li><p><strong>Functionality:</strong> Combines the steps of fitting the survival model, performing the log-rank test, and generating the Kaplan-Meier plot.</p></li>
</ul>
</section>
</section>
<section id="applying-the-functions" class="level2">
<h2 class="anchored" data-anchor-id="applying-the-functions">Applying the Functions</h2>
<p>Here’s an example of how to use the <code>make_survival_analysis</code> function with the <code>lung</code> dataset from the <code>survival</code> package:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_survival_analysis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">event =</span> status, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sex, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> lung, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xcoord =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">900</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Survival Probability"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lung Cancer Survival by Sex"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/survival/post_files/figure-html/example-plot-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This code performs the survival analysis on the <code>lung</code> dataset, comparing survival times between males and females, and plots the Kaplan-Meier curves with the corresponding p-value.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>By encapsulating the steps of survival analysis into custom functions, we can efficiently conduct and visualize survival studies. These functions not only streamline the workflow but also ensure consistency and reproducibility in survival analysis tasks. Whether you’re comparing treatment groups or exploring survival probabilities in different cohorts, these tools can significantly enhance your analytical capabilities in R.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li>Therneau T (2024). <em>A Package for Survival Analysis in R</em>. R package version 3.6-4, <a href="https://CRAN.R-project.org/package=survival" class="uri">https://CRAN.R-project.org/package=survival</a>.</li>
<li>Terry M. Therneau, Patricia M. Grambsch (2000). <em>Modeling Survival Data: Extending the Cox Model</em>. Springer, New York. ISBN 0-387-98784-3.</li>
<li>Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” <em>Journal of Open Source Software</em>, <em>4</em>(43), 1686. doi:10.21105/joss.01686 <a href="https://doi.org/10.21105/joss.01686" class="uri">https://doi.org/10.21105/joss.01686</a>.</li>
<li>Yuan Tang, Masaaki Horikoshi, and Wenxuan Li. “ggfortify: Unified Interface to Visualize Statistical Result of Popular R Packages.” The R Journal 8.2 (2016): 478-489.</li>
<li>Masaaki Horikoshi and Yuan Tang (2016). ggfortify: Data Visualization Tools for Statistical Analysis Results. https://CRAN.R-project.org/package=ggfortify</li>
<li>Wickham H, Pedersen T, Seidel D (2023). <em>scales: Scale Functions for Visualization</em>. R package version 1.3.0, <a href="https://CRAN.R-project.org/package=scales" class="uri">https://CRAN.R-project.org/package=scales</a>.</li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>survival analysis</category>
  <category>kaplan-meier plot</category>
  <category>log-rank test</category>
  <category>data visualization</category>
  <category>ggplot2</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/survival/post.html</guid>
  <pubDate>Thu, 18 Jul 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Generating Random City Names Based on Syllable Formation Rules</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/random_words/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In this blog post, we’ll explore how to generate random city names by applying various syllable-based rules to the names of municipalities in the Province of Alicante, Spain. We will be using several functions to transform and manipulate strings in R.</p>
</section>
<section id="motivation" class="level1">
<h1>Motivation</h1>
<p>This post aims to create fictional names for locations, such as those found in fantasy novels, that resemble Spanish words but do not actually exist. This method can also be applied to generate names for characters or invent unique words for various creative projects. The main challenge is implementing rules for syllable formation, which are the building blocks of word generation, and then finding combinations of syllables present in real words to replicate something similar. By doing so, we can produce names that sound authentic yet are entirely new.</p>
</section>
<section id="load-libraries" class="level1">
<h1>Load Libraries</h1>
<p>First, we load the necessary libraries.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rvest)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggwordcloud)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>R version 4.4.1 (2024-06-14 ucrt)
Platform: x86_64-w64-mingw32/x64
Running under: Windows 11 x64 (build 22631)

Matrix products: default


locale:
[1] LC_COLLATE=English_United States.utf8 
[2] LC_CTYPE=English_United States.utf8   
[3] LC_MONETARY=English_United States.utf8
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.utf8    

time zone: Europe/Madrid
tzcode source: internal

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] ggwordcloud_0.6.2 rvest_1.0.4       lubridate_1.9.3   forcats_1.0.0    
 [5] stringr_1.5.1     dplyr_1.1.4       purrr_1.0.2       readr_2.1.5      
 [9] tidyr_1.3.1       tibble_3.2.1      ggplot2_3.5.1     tidyverse_2.0.0  

loaded via a namespace (and not attached):
 [1] gtable_0.3.5      jsonlite_1.8.8    compiler_4.4.1    Rcpp_1.0.12      
 [5] tidyselect_1.2.1  xml2_1.3.6        png_0.1-8         scales_1.3.0     
 [9] yaml_2.3.9        fastmap_1.2.0     R6_2.5.1          generics_0.1.3   
[13] knitr_1.48        htmlwidgets_1.6.4 munsell_0.5.1     pillar_1.9.0     
[17] tzdb_0.4.0        rlang_1.1.4       utf8_1.2.4        stringi_1.8.4    
[21] xfun_0.45         timechange_0.3.0  cli_3.6.3         withr_3.0.0      
[25] magrittr_2.0.3    gridtext_0.1.5    digest_0.6.36     grid_4.4.1       
[29] rstudioapi_0.16.0 hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5      
[33] evaluate_0.24.0   glue_1.7.0        fansi_1.0.6       colorspace_2.1-0 
[37] httr_1.4.7        rmarkdown_2.27    tools_4.4.1       pkgconfig_2.0.3  
[41] htmltools_0.5.8.1</code></pre>
</div>
</div>
</section>
<section id="import-and-clean-data" class="level1">
<h1>Import and Clean Data</h1>
<p>We start by importing the data of municipalities in the Province of Alicante from Wikipedia and cleaning it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import data of municipalities in Alacant Province -------------------------------------------------------------</span></span>
<span id="cb3-2">html_alacant <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://es.wikipedia.org/wiki/Anexo:Municipios_de_la_provincia_de_Alicante"</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4">cities_alicante <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> html_alacant <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_element</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wikitable"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_table</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Nombre en castellano</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(cities_alicante)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 1
  name          
  &lt;chr&gt;         
1 Adsubia       
2 Agost         
3 Agres         
4 Aguas de Busot
5 Albatera      
6 Alcalalí      </code></pre>
</div>
</div>
</section>
<section id="functions" class="level1">
<h1>Functions</h1>
<section id="pre-process-words" class="level2">
<h2 class="anchored" data-anchor-id="pre-process-words">Pre-process Words</h2>
<p>This function transforms the names into a format suitable for syllable extraction. It converts the names to lowercase, replaces spaces and commas, and substitutes specific letter combinations with symbols.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">letter_to_symbol <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, var) {</span>
<span id="cb5-2">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_lower</span>({{ var }}),</span>
<span id="cb5-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*), (.*)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>),</span>
<span id="cb5-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>),</span>
<span id="cb5-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb5-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ch"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ʧ"</span>),</span>
<span id="cb5-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ʀ"</span>),</span>
<span id="cb5-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qu"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span>),</span>
<span id="cb5-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ll"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ʝ"</span>),</span>
<span id="cb5-12">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(palabras, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c([aou])"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>)</span>
<span id="cb5-13">    )</span>
<span id="cb5-14">}</span></code></pre></div>
</div>
</section>
<section id="apply-syllable-based-rules" class="level2">
<h2 class="anchored" data-anchor-id="apply-syllable-based-rules">Apply Syllable-Based Rules</h2>
<p>This function applies a regex rule to separate syllables based on predefined patterns. It detects and splits words according to the rule, handling cases where the rule does not apply.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">apply_rule <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, regex) {</span>
<span id="cb6-2">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rule =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(palabras, regex),</span>
<span id="cb6-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">syllable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_match</span>(palabras, regex)[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.name_repair =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minimal"</span>)</span>
<span id="cb6-6">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_wider</span>(syllable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(</span>
<span id="cb6-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"syllable"</span>),</span>
<span id="cb6-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"silabas"</span>,</span>
<span id="cb6-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"norma"</span></span>
<span id="cb6-12">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-14">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">silabas =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(rule <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> norma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"syllable_1"</span>, palabras, silabas)</span>
<span id="cb6-15">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(silabas) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> silabas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(</span>
<span id="cb6-18">      name,</span>
<span id="cb6-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palabras =</span> silabas</span>
<span id="cb6-20">    )</span>
<span id="cb6-21">}</span></code></pre></div>
</div>
</section>
<section id="apply-rules-in-loop" class="level2">
<h2 class="anchored" data-anchor-id="apply-rules-in-loop">Apply Rules in Loop</h2>
<p>This function repeatedly applies the given regex rule until no more changes occur in the dataset, ensuring all possible syllable separations are handled.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">loop_apply_rule <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, regex) {</span>
<span id="cb7-2">  loop_controller <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb7-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> (loop_controller <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb7-4">    previous_nrow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df)</span>
<span id="cb7-5">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply_rule</span>(df, regex)</span>
<span id="cb7-6">    new_nrow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df)</span>
<span id="cb7-7">    loop_controller <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(previous_nrow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> new_nrow, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-8">  }</span>
<span id="cb7-9">  df</span>
<span id="cb7-10">}</span></code></pre></div>
</div>
</section>
<section id="revert-symbols-to-original-letters" class="level2">
<h2 class="anchored" data-anchor-id="revert-symbols-to-original-letters">Revert Symbols to Original Letters</h2>
<p>This function reverses the symbol transformations applied by <code>letter_to_symbol</code>, converting symbols back to their original letter combinations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">symbol_to_letter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, var) {</span>
<span id="cb8-2">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-4">      {{ var }} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>({{ var }}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>),</span>
<span id="cb8-5">      {{ var }} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>({{ var }}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ʧ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ch"</span>),</span>
<span id="cb8-6">      {{ var }} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>({{ var }}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ʝ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ll"</span>),</span>
<span id="cb8-7">      {{ var }} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>({{ var }}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ʀ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rr"</span>),</span>
<span id="cb8-8">      {{ var }} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>({{ var }}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qu"</span>),</span>
<span id="cb8-9">      {{ var }} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>({{ var }}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k([aou])"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>)</span>
<span id="cb8-10">    )</span>
<span id="cb8-11">}</span></code></pre></div>
</div>
</section>
<section id="spanish-syllable-rules" class="level2">
<h2 class="anchored" data-anchor-id="spanish-syllable-rules">Spanish Syllable Rules</h2>
<p>Here, we define the regex rules for syllable separation. These are based on Spanish rules for syllable separation (inspiration from <a href="http://elies.rediris.es/elies4/Fon2.htm">this document</a>).</p>
<p>These rules are completely dependent on the language we are trying to imitate.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">norma_0a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(^.+)(_[dy].*_)(.+$)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># handle separation words, such as "de", "de los", etc.</span></span>
<span id="cb9-2">norma_0b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(^[^_]+_)(.+)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># handle separation words, such as "de", "de los", etc.</span></span>
<span id="cb9-3">norma_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*[aeiouáéíóú])([^_aeiouáéíóú][aeiouáéíóú].*)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># VCV -&gt; V-CV</span></span>
<span id="cb9-4">norma_2a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*)([pkbgf][rl].*)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># C1 C2 -&gt; - C1 C2 (obstruyente + líquida)</span></span>
<span id="cb9-5">norma_2b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*)([dt][r].*)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># C1 C2 -&gt; - C1 C2 (obstruyente + líquida)</span></span>
<span id="cb9-6">norma_2c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*[^_aeiouáéíóú])([^_aeiouáéíóúrl][^_].*)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># C1 C2 -&gt; C1 - C2 </span></span>
<span id="cb9-7">norma_2d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*[^_aeiouáéíóúpkbgfdt])([rl].+)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># C1 C2 -&gt; C1 - C2 </span></span>
<span id="cb9-8">norma_2e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*[^_aeiouáéíóúpkbgf])([l].+)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># C1 C2 -&gt; C1 - C2 </span></span>
<span id="cb9-9">norma_5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*[aeo])([aeo].*)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># V1 V2 -&gt; V1 - V2 (vocales altas)</span></span>
<span id="cb9-10">norma_6a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*[íú])([aeiou].*)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># V1 V2 -&gt; V1 - V2 (hiatos)</span></span>
<span id="cb9-11">norma_6b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regex</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.*[aeiou])([íú].*)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># V1 V2 -&gt; V1 - V2 (hiatos)</span></span></code></pre></div>
</div>
</section>
<section id="separate-words-into-syllables" class="level2">
<h2 class="anchored" data-anchor-id="separate-words-into-syllables">Separate Words into Syllables</h2>
<p>This function applies all the syllable separation rules to the names and converts them back from symbols to letters. It also labels each syllable’s position in the word.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">names_to_syllables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb10-2">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">letter_to_symbol</span>(name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_0a) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_0b) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_2a) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_2b) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_2c) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_2d) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_2e) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_5) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_6a) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop_apply_rule</span>(norma_6b) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">symbol_to_letter</span>(palabras) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb10-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">posicion =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb10-19">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inicio"</span>,</span>
<span id="cb10-20">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"final"</span>,</span>
<span id="cb10-21">        <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medio"</span></span>
<span id="cb10-22">      )</span>
<span id="cb10-23">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">silaba =</span> palabras)</span>
<span id="cb10-26">}</span></code></pre></div>
</div>
</section>
<section id="create-randomly-generated-city-name" class="level2">
<h2 class="anchored" data-anchor-id="create-randomly-generated-city-name">Create Randomly-Generated City Name</h2>
<p>This function generates random city names by selecting syllables based on their frequency and position within existing names.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">create_random_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df_syllables_per_word, df_syllables_freq, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beginning =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) {</span>
<span id="cb11-2">  new_names_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb11-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (x <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>length) {</span>
<span id="cb11-4">    n_syllables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_syllables_per_word <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(n)</span>
<span id="cb11-7">    new_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb11-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_syllables) {</span>
<span id="cb11-9">      place <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb11-10">        i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inicio"</span>,</span>
<span id="cb11-11">        i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n_syllables <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"final"</span>,</span>
<span id="cb11-12">        <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medio"</span></span>
<span id="cb11-13">      )</span>
<span id="cb11-14">      new_name[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_syllables_freq <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-15">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(posicion <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> place) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight_by =</span> n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(silaba)</span>
<span id="cb11-18">    }</span>
<span id="cb11-19">    new_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(beginning, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_flatten</span>(new_name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_title</span>()</span>
<span id="cb11-20">    new_names_vector[x] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_name</span>
<span id="cb11-21">  }</span>
<span id="cb11-22">  new_names_vector</span>
<span id="cb11-23">}</span></code></pre></div>
</div>
</section>
<section id="putting-all-together" class="level2">
<h2 class="anchored" data-anchor-id="putting-all-together">Putting All Together</h2>
<p>Combine all steps into a single function to generate random city names.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">create_city_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beginning =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) {</span>
<span id="cb12-2">  syllables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names_to_syllables</span>(df)</span>
<span id="cb12-3">  syllables_freq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> syllables <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(posicion, silaba)</span>
<span id="cb12-4">  syllables_per_word <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> syllables <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(name)</span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_random_name</span>(syllables_per_word, syllables_freq, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beginning =</span> beginning)</span>
<span id="cb12-6">}</span></code></pre></div>
</div>
</section>
</section>
<section id="applying-to-alicante-cities-data" class="level1">
<h1>Applying to Alicante Cities Data</h1>
<p>Transform the Alicante municipalities’ names into syllables.</p>
<section id="names-to-syllables" class="level2">
<h2 class="anchored" data-anchor-id="names-to-syllables">Names to Syllables</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">silabas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cities_alicante <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names_to_syllables</span>()</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(silabas)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  name    silaba posicion
  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;   
1 Adsubia ad     inicio  
2 Adsubia su     medio   
3 Adsubia bia    final   
4 Agost   a      inicio  
5 Agost   gost   final   
6 Agres   a      inicio  </code></pre>
</div>
</div>
</section>
<section id="syllable-frequency" class="level2">
<h2 class="anchored" data-anchor-id="syllable-frequency">Syllable Frequency</h2>
<p>Calculate the frequency of each syllable and its position.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">silabas_freq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> silabas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(posicion, silaba)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(silabas_freq)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  posicion silaba     n
  &lt;chr&gt;    &lt;chr&gt;  &lt;int&gt;
1 final    a          3
2 final    ba         2
3 final    beig       1
4 final    ber        1
5 final    bi         2
6 final    bia        1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">silabas_freq <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> silaba, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> n)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_wordcloud</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/random_words/post_files/figure-html/syllables-freq-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="syllables-per-word" class="level2">
<h2 class="anchored" data-anchor-id="syllables-per-word">Syllables per Word</h2>
<p>Count the number of syllables per name and visualize the distribution.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">silabas_por_palabra <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> silabas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(name)</span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(silabas_por_palabra, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> n)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb18-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of syllables per City Name"</span>,</span>
<span id="cb18-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span></span>
<span id="cb18-11">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/random_words/post_files/figure-html/syllables-per-word-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="generate-random-names" class="level2">
<h2 class="anchored" data-anchor-id="generate-random-names">Generate Random Names</h2>
<p>Generate a set of random city names based on the Alicante data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_city_names</span>(cities_alicante, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "Semancent"            "Pi De Ja"             "Ojória"              
 [4] "Cabalisot"            "Ate"                  "Alniecogost"         
 [7] "Mondacañedes"         "Amataviedro"          "San  De Las Na"      
[10] "Parchenes"            "Banar"                "Pora"                
[13] "Befajuanjachell"      "Danipi"               "Beniarra De Nas"     
[16] "Comarnigo"            "Biarrate"             "Algra"               
[19] "Benichell"            "No De Minedanillenes"</code></pre>
</div>
</div>
</section>
</section>
<section id="challenges-left" class="level1">
<h1>Challenges Left</h1>
<p>Despite the progress made, several challenges remain. Post-processing errors, such as double blank spaces, multiple accents in a single word, and overly long or difficult-to-pronounce words, need to be addressed. Future improvements could involve using two-syllable combinations instead of single-syllable building blocks, which would create more natural-sounding names at the expense of reduced variety.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this post, we demonstrated how to generate random city names by applying syllable-based rules to the names of municipalities in Alicante, Spain. By following these steps, you can create your own set of random names for any dataset of city names.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://es.wikipedia.org/wiki/Anexo:Municipios_de_la_provincia_de_Alicante">Municipios de la Provincia de Alicante</a></li>
<li><a href="http://elies.rediris.es/elies4/Fon2.htm">Reglas de silabación del castellano</a></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>strings</category>
  <category>functions</category>
  <category>creative project</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/random_words/post.html</guid>
  <pubDate>Sun, 14 Jul 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Daily Data Visualization with R: Jitter Plot</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/jitter_plot/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a powerful tool in understanding complex datasets, especially in the field of public health. In this tutorial, we will use Quarto and R to create a <strong>jitter plot</strong>, which is especially useful for visualizing the distribution of data points along a continuous axis. Jitter plots help to overcome the issue of overlapping points by adding a small amount of random noise to each point.</p>
<p>In this blog post, we will explore how to use the <code>geom_jitter()</code> function from the <code>ggplot2</code> package in R to visualize the relationship between sex and Body Mass Index (BMI) distributions using data from the Spanish European Health Survey 2020, discussed in a <a href="https://carlosepistats.github.io/blog/posts/bmi_spain_2020/post.html">previous post</a>.</p>
<section id="load-libraries" class="level2">
<h2 class="anchored" data-anchor-id="load-libraries">Load Libraries</h2>
<p>First, we load the necessary libraries.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(</span>
<span id="cb1-2">  tidyverse</span>
<span id="cb1-3">)</span></code></pre></div>
</div>
</section>
</section>
<section id="import-and-clean-data" class="level1">
<h1>Import and Clean Data</h1>
<p>To begin, we import the dataset from the Spanish European Health Survey 2020 and perform necessary data cleaning steps.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">file_2020 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MICRODATOS_PUBLICACION_CADULTO.txt"</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read using read_fwf</span></span>
<span id="cb2-4">data_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_fwf</span>(</span>
<span id="cb2-5">  file_2020,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_positions =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fwf_cols</span>(</span>
<span id="cb2-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>),</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">369</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">371</span>),</span>
<span id="cb2-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">372</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">374</span>)</span>
<span id="cb2-11">  ),</span>
<span id="cb2-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_types =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iiii"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set all columns as integers</span></span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"998"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"999"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Missing values encoded as 998 (doesn't know) or 999 (doesn't answer)</span></span>
<span id="cb2-14">) </span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean data and calculate BMI</span></span>
<span id="cb2-17">data_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(sex, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>)),</span>
<span id="cb2-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmi =</span> weight <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (height<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-21">  ) </span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_clean)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 22,072
Columns: 5
$ sex    &lt;fct&gt; Male, Female, Male, Female, Male, Female, Female, Female, Male,…
$ age    &lt;int&gt; 60, 87, 38, 43, 41, 34, 60, 79, 87, 82, 77, 44, 47, 16, 48, 25,…
$ height &lt;int&gt; 175, NA, 174, 164, 169, 167, 159, 150, 178, NA, 155, 184, 181, …
$ weight &lt;int&gt; 74, NA, 80, 58, 74, 90, NA, 73, 72, 64, NA, 86, 85, 56, 67, 87,…
$ bmi    &lt;dbl&gt; 24.16327, NA, 26.42357, 21.56454, 25.90946, 32.27079, NA, 32.44…</code></pre>
</div>
</div>
</section>
<section id="visualize-data" class="level1">
<h1>Visualize Data</h1>
<p>Next, we create a visualization to explore the relationship between sex and BMI.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a random sample of 1000 participants for better visualization</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb4-3">data_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create jitter plot using ggplot2 </span></span>
<span id="cb4-7">data_sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bmi, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> sex, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> sex)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb4-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb4-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb4-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Body Mass Index (kg/m²)"</span>, </span>
<span id="cb4-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sex"</span>,</span>
<span id="cb4-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adult Males Tend to Have Higher BMI than Females"</span>,</span>
<span id="cb4-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excess Weight is Highly Prevalent in Both Sexes"</span>,</span>
<span id="cb4-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dashed lines represent thresholds of overweight (25 kg/m²) and obesity (30 kg/m²).</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Data source: random sample of 1000 participants in the Spanish European Health Survey 2020."</span></span>
<span id="cb4-23">  ) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/jitter_plot/post_files/figure-html/plots-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="plot-interpretation" class="level1">
<h1>Plot Interpretation</h1>
<p>The jitter plot above visualizes the distribution of Body Mass Index (BMI) across sexes based on a random sample of 1000 participants from the Spanish European Health Survey 2020. Each point represents an individual’s BMI, with female data points in blue and male data points in red. The dashed lines at BMI values of 25 and 30 represent thresholds for overweight and obesity, respectively.</p>
<p>The jitter plot provides a visual representation of how BMI varies between males and females in the surveyed population. It highlights the prevalence of excess weight (overweight and obesity) in both sexes, with males tending to have higher average BMI compared to females.</p>
<p>When using jitter plots, we need to take into account the following pros and cons.</p>
<section id="pros-of-jitter-plots" class="level2">
<h2 class="anchored" data-anchor-id="pros-of-jitter-plots">Pros of Jitter Plots</h2>
<ul>
<li><p><strong>Preserves Individual Data Points:</strong> <code>geom_jitter()</code> displays each data point individually, making it suitable for visualizing the distribution of discrete data or small datasets.</p></li>
<li><p><strong>Handles Overplotting:</strong> It adds a small amount of random noise to data points, reducing overplotting and providing a clearer view of the distribution.</p></li>
<li><p><strong>Suitable for Categorical or Discrete Variables:</strong> Particularly useful when visualizing relationships between a continuous variable (like BMI) and a categorical variable (like sex).</p></li>
</ul>
</section>
<section id="cons-of-jitter-plots" class="level2">
<h2 class="anchored" data-anchor-id="cons-of-jitter-plots">Cons of Jitter Plots</h2>
<ul>
<li><p><strong>Limited for Large Datasets:</strong> When dealing with large datasets, <code>geom_jitter()</code> can become cluttered, making it challenging to interpret the density of data points accurately. That’s why we have sampled a subset of the original dataset for creating this visualization. For larger datasets, <code>geom_density()</code> or <code>geom_histogram()</code> might provide a clearer view.</p></li>
<li><p><strong>Not Suitable for Exact Data Counting:</strong> Because it spreads points out to avoid overlap, it can obscure the true density of data points in a specific region.</p></li>
</ul>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Jitter plots are valuable for visualizing the distribution of data points, especially when dealing with overlapping data in datasets of limited size. By using <code>ggplot2</code> and <code>geom_jitter()</code>, we can effectively explore and communicate insights from complex datasets such as health surveys.</p>
</section>
<section id="references" class="level1">
<h1>References:</h1>
<ul>
<li><a href="https://www.sanidad.gob.es/estadEstudios/estadisticas/EncuestaEuropea/Enc_Eur_Salud_en_Esp_2020.htm">Encuesta Europea de Salud en España 2020</a></li>
<li><a href="https://carlosepistats.github.io/blog/posts/bmi_spain_2020/post.html">EpiStats Blog. Load Data from the National Health Survey Spain 2020</a></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>ggplot2</category>
  <category>data visualization</category>
  <category>tidyverse</category>
  <category>health</category>
  <category>jitter</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/jitter_plot/post.html</guid>
  <pubDate>Thu, 27 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Visualizing BMI Distributions Across Educational Levels with ggridges</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/ggridges/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a powerful tool in understanding complex datasets, especially in the field of public health. One such visualization technique that can reveal intricate patterns and distributions is the <strong>ridge plot</strong>, also known as the joy plot. In this blog post, we will explore how to use the <code>ggridges</code> package in R to visualize the relationship between educational levels and Body Mass Index (BMI) distributions using data from the Spanish European Health Survey 2020, discussed in a <a href="https://carlosepistats.github.io/blog/posts/bmi_spain_2020/post.html">previous post</a>.</p>
<p>Ridge plots are particularly useful for comparing the distribution of a numerical variable across different categories. In this case, we will compare BMI distributions across various levels of education. This visualization can help us understand how educational attainment might influence BMI, providing insights that are critical for public health strategies and interventions.</p>
<p>The <code>ggridges</code> package in R offers a simple and elegant way to create ridge plots. Combined with the <code>ggplot2</code> and <code>tidyverse</code> packages, it provides a flexible and powerful toolkit for data visualization. Let’s dive into the process of creating a ridge plot, from data import and cleaning to the final visualization.</p>
<section id="load-libraries" class="level2">
<h2 class="anchored" data-anchor-id="load-libraries">Load Libraries</h2>
<p>First, we load the necessary libraries.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(</span>
<span id="cb1-2">  tidyverse, </span>
<span id="cb1-3">  ggridges</span>
<span id="cb1-4">)</span></code></pre></div>
</div>
</section>
</section>
<section id="import-and-clean-data" class="level1">
<h1>Import and Clean Data</h1>
<p>We start by importing the dataset and performing necessary data cleaning steps.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">file_2020 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MICRODATOS_PUBLICACION_CADULTO.txt"</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read using read_fwf</span></span>
<span id="cb2-4">data_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_fwf</span>(</span>
<span id="cb2-5">  file_2020,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_positions =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fwf_cols</span>(</span>
<span id="cb2-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>),</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">369</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">371</span>),</span>
<span id="cb2-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">372</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">374</span>),</span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">education =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>)</span>
<span id="cb2-12">  ),</span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_types =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iiiii"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set all columns as integers</span></span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"998"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"999"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Missing values encoded as 998 (doesn't know) or 999 (doesn't answer)</span></span>
<span id="cb2-15">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">education =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(education <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, education) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Missing in education encoded as 1, 98 or 99</span></span>
<span id="cb2-18">  )</span>
<span id="cb2-19"></span>
<span id="cb2-20">data_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(sex, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>)),</span>
<span id="cb2-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">education =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(</span>
<span id="cb2-24">      education, </span>
<span id="cb2-25">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, </span>
<span id="cb2-26">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb2-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cannot read or write"</span>, </span>
<span id="cb2-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Incomplete Primary Education"</span>,</span>
<span id="cb2-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Complete Primary Education"</span>,</span>
<span id="cb2-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First stage of Secondary Education"</span>,</span>
<span id="cb2-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Baccalaureate Studies"</span>,</span>
<span id="cb2-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Middle-level professional training"</span>,</span>
<span id="cb2-33">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Higher-level professional training"</span>,</span>
<span id="cb2-34">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"University studies or equivalents"</span></span>
<span id="cb2-35">        )</span>
<span id="cb2-36">      ),</span>
<span id="cb2-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmi =</span> weight <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (height<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-38">  ) </span>
<span id="cb2-39"></span>
<span id="cb2-40"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_clean)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 22,072
Columns: 6
$ sex       &lt;fct&gt; Male, Female, Male, Female, Male, Female, Female, Female, Ma…
$ age       &lt;int&gt; 60, 87, 38, 43, 41, 34, 60, 79, 87, 82, 77, 44, 47, 16, 48, …
$ height    &lt;int&gt; 175, NA, 174, 164, 169, 167, 159, 150, 178, NA, 155, 184, 18…
$ weight    &lt;int&gt; 74, NA, 80, 58, 74, 90, NA, 73, 72, 64, NA, 86, 85, 56, 67, …
$ education &lt;fct&gt; Middle-level professional training, Baccalaureate Studies, M…
$ bmi       &lt;dbl&gt; 24.16327, NA, 26.42357, 21.56454, 25.90946, 32.27079, NA, 32…</code></pre>
</div>
</div>
</section>
<section id="visualize-data" class="level1">
<h1>Visualize Data</h1>
<p>Next, we create a visualization to explore the relationship between education levels and BMI.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ridges by educational level</span></span>
<span id="cb4-2">data_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bmi, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> education, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> education, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> education)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_density_ridges</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rel_min_height =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.005</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb4-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Body Mass Index (kg/m²)"</span>,</span>
<span id="cb4-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Education"</span>,</span>
<span id="cb4-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Higher Education is Associated with Lower BMI in Adults"</span>,</span>
<span id="cb4-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMI Distribution is Shifted Rightwards in Low-Education Population"</span>,</span>
<span id="cb4-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data source: Spanish European Health Survey 2020."</span></span>
<span id="cb4-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_d</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb4-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb4-16">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/ggridges/post_files/figure-html/plots-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="plot-interpretation" class="level1">
<h1>Plot Interpretation</h1>
<p>The <strong>ridge plot</strong> (also known as a joy plot) is a useful visualization for comparing distributions of a numerical variable across different categories. Here’s a breakdown of the syntax and functions used in the code above:</p>
<ul>
<li><p><code>ggplot(aes(x = bmi, y = education, group = education, fill = education))</code>: Initializes the ggplot object, specifying the aesthetics for the x-axis (<code>bmi</code>), y-axis (<code>education</code>), and the grouping and fill color by <code>education</code>.</p></li>
<li><p><code>geom_density_ridges(rel_min_height = 0.005, scale = 4)</code>: Adds the ridge plot layers.</p>
<ul>
<li><p><code>geom_density_ridges()</code> creates density plots for each category of <code>education</code>, stacked one above the other.</p></li>
<li><p><code>rel_min_height</code> sets the minimum height of the ridges relative to the peak of the density curves. A lower value makes the ridges appear more separated.</p></li>
<li><p><code>scale</code> controls the vertical scaling of the ridges, which can make the plot more readable.</p></li>
</ul></li>
</ul>
<p>This visualization clearly shows how BMI distributions shift across different educational levels. Generally, individuals with higher education levels tend to have lower BMIs, as evidenced by the leftward shift in their distributions.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Our analysis of the Spanish European Health Survey 2020 data indicates a clear association between educational levels and BMI among Spanish adults. Higher educational attainment correlates with lower BMI, suggesting that education and socioeconomic status may play a critical role in mantaining a healthy body weight.</p>
</section>
<section id="references" class="level1">
<h1>References:</h1>
<ul>
<li><a href="https://www.sanidad.gob.es/estadEstudios/estadisticas/EncuestaEuropea/Enc_Eur_Salud_en_Esp_2020.htm">Encuesta Europea de Salud en España 2020</a></li>
<li>Wilke C (2024). <em>ggridges: Ridgeline Plots in ‘ggplot2’</em>. R package version 0.5.6, <a href="https://CRAN.R-project.org/package=ggridges" class="uri">https://CRAN.R-project.org/package=ggridges</a>.</li>
<li><a href="https://carlosepistats.github.io/blog/posts/bmi_spain_2020/post.html">EpiStats Blog. Load Data from the National Health Survey Spain 2020</a></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>importing</category>
  <category>data cleaning</category>
  <category>ggplot2</category>
  <category>ggridges</category>
  <category>tidyverse</category>
  <category>health</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/ggridges/post.html</guid>
  <pubDate>Tue, 25 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Load Data from the National Health Survey Spain 2020</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/bmi_spain_2020/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In this post, we will load, clean, and visualize data from the National Health Survey Spain 2020. This dataset provides valuable insights into the health status of the Spanish population, including information on age, sex, region, height, and weight.</p>
<p>Information about the Health Survey can be found on the <a href="https://www.sanidad.gob.es/estadEstudios/estadisticas/EncuestaEuropea/Enc_Eur_Salud_en_Esp_2020.htm">official page of the Spanish Health Ministry</a>. The data can be downloaded from <a href="https://www.sanidad.gob.es/estadisticas/microdatos.do">this webpage</a>.</p>
<section id="load-libraries" class="level2">
<h2 class="anchored" data-anchor-id="load-libraries">Load Libraries</h2>
<p>First, we load the necessary libraries.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(</span>
<span id="cb1-2">  tidyverse, </span>
<span id="cb1-3">  scales</span>
<span id="cb1-4">)</span></code></pre></div>
</div>
</section>
</section>
<section id="import-data" class="level1">
<h1>Import Data</h1>
<p>We will import the data from a fixed-width file (<code>MICRODATOS_PUBLICACION_CADULTO.txt</code>) and focus on the columns for age, sex, region, height, and weight.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">file_2020 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MICRODATOS_PUBLICACION_CADULTO.txt"</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read using read_fwf</span></span>
<span id="cb2-4">data_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_fwf</span>(</span>
<span id="cb2-5">  file_2020,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_positions =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fwf_cols</span>(</span>
<span id="cb2-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>),</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb2-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">369</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">371</span>),</span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">372</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">374</span>)</span>
<span id="cb2-12">  ),</span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_types =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iiiii"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set all columns as integers</span></span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"998"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"999"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Missing values encoded as 998 (doesn't know) or 999 (doesn't answer)</span></span>
<span id="cb2-15">)</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_raw)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 22,072
Columns: 5
$ sex    &lt;int&gt; 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, …
$ age    &lt;int&gt; 60, 87, 38, 43, 41, 34, 60, 79, 87, 82, 77, 44, 47, 16, 48, 25,…
$ region &lt;int&gt; 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,…
$ height &lt;int&gt; 175, NA, 174, 164, 169, 167, 159, 150, 178, NA, 155, 184, 181, …
$ weight &lt;int&gt; 74, NA, 80, 58, 74, 90, NA, 73, 72, 64, NA, 86, 85, 56, 67, 87,…</code></pre>
</div>
</div>
</section>
<section id="clean-data" class="level1">
<h1>Clean Data</h1>
<p>Next, we clean the data by converting the sex and region columns to factors, calculating the Body Mass Index (BMI), and categorizing the BMI values.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">data_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sex =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(sex, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>)),</span>
<span id="cb4-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(region, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andalucía"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Aragón"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asturias, Principado de"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Balears, Illes"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Canarias"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cantabria"</span>,    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Castilla y León"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Castilla - La Mancha"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cataluña"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comunitat Valenciana"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extremadura"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Galicia"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Madrid, Comunidad de"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Murcia, Región de"</span>,    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Navarra, Comunidad Foral de"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"País Vasco"</span>,   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rioja, La"</span>,    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ceuta"</span>,    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Melilla"</span>)),</span>
<span id="cb4-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmi =</span> weight <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (height<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb4-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmi_cat =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb4-7">      bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18.5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Underweight"</span>,</span>
<span id="cb4-8">      bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18.5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Normal weight"</span>,</span>
<span id="cb4-9">      bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Overweight"</span>,</span>
<span id="cb4-10">      bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Obesity"</span></span>
<span id="cb4-11">    ),</span>
<span id="cb4-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmi_cat =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct</span>(bmi_cat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Underweight"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Normal weight"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Overweight"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Obesity"</span>))</span>
<span id="cb4-13">  ) </span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_clean)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 22,072
Columns: 7
$ sex     &lt;fct&gt; Male, Female, Male, Female, Male, Female, Female, Female, Male…
$ age     &lt;int&gt; 60, 87, 38, 43, 41, 34, 60, 79, 87, 82, 77, 44, 47, 16, 48, 25…
$ region  &lt;fct&gt; "País Vasco", "País Vasco", "País Vasco", "País Vasco", "País …
$ height  &lt;int&gt; 175, NA, 174, 164, 169, 167, 159, 150, 178, NA, 155, 184, 181,…
$ weight  &lt;int&gt; 74, NA, 80, 58, 74, 90, NA, 73, 72, 64, NA, 86, 85, 56, 67, 87…
$ bmi     &lt;dbl&gt; 24.16327, NA, 26.42357, 21.56454, 25.90946, 32.27079, NA, 32.4…
$ bmi_cat &lt;fct&gt; Normal weight, NA, Overweight, Normal weight, Overweight, Obes…</code></pre>
</div>
</div>
</section>
<section id="visualize-data" class="level1">
<h1>Visualize Data</h1>
<p>We will create two visualizations: a bar plot showing the proportion of different weight categories, and a combined histogram and density plot to visualize the BMI distribution by sex.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bar plot of weight categories</span></span>
<span id="cb6-2">data_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(bmi_cat)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bmi_cat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(prop), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_percent</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb6-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weight category"</span>,</span>
<span id="cb6-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Proportion of answers"</span>,</span>
<span id="cb6-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A Substantial Proportion of Adult Spaniards have Overweight or Obesity"</span>,</span>
<span id="cb6-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data source: Spanish European Health Survey 2020."</span></span>
<span id="cb6-13">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/bmi_spain_2020/post_files/figure-html/plots-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Histogram and density plots by sex</span></span>
<span id="cb7-2">data_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bmi, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> sex)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(</span>
<span id="cb7-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(density)),</span>
<span id="cb7-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb7-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, </span>
<span id="cb7-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_density</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> sex), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb7-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb7-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb7-16">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb7-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>, </span>
<span id="cb7-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Body Mass Index (kg/m²)"</span>,</span>
<span id="cb7-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sex"</span>,</span>
<span id="cb7-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sex"</span>,</span>
<span id="cb7-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Males Have Higher BMI than Females, on Average"</span>,</span>
<span id="cb7-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excess Weight is Highly Prevalent in Both Sexes"</span>,</span>
<span id="cb7-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dashed lines represent thresholds of overweight (25 kg/m²) and obesity (30 kg/m²).</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Data source: Spanish European Health Survey 2020."</span></span>
<span id="cb7-26">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/bmi_spain_2020/post_files/figure-html/plots-2.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="plot-interpretation" class="level1">
<h1>Plot Interpretation</h1>
<section id="bar-plot-of-weight-categories" class="level2">
<h2 class="anchored" data-anchor-id="bar-plot-of-weight-categories">Bar Plot of Weight Categories</h2>
<p>The bar plot shows the proportion of individuals in each weight category (Underweight, Normal weight, Overweight, Obesity).</p>
<ul>
<li><strong>Overweight and Obesity Prevalence:</strong> The plot highlights that a substantial proportion of the adult Spanish population falls into the overweight or obese categories.</li>
<li><strong>Public Health Concern:</strong> This high prevalence of overweight and obesity indicates significant public health concerns, as these conditions are associated with various health risks.</li>
</ul>
</section>
<section id="histogram-and-density-plots-by-sex" class="level2">
<h2 class="anchored" data-anchor-id="histogram-and-density-plots-by-sex">Histogram and Density Plots by Sex</h2>
<p>The histogram and density plots provide a detailed view of the BMI distribution for males and females.</p>
<ul>
<li><strong>Sex Differences:</strong> Males generally have higher BMI values than females, as indicated by the density curves. This is evident from the rightward shift in the male density curve compared to the female density curve.</li>
<li><strong>Dashed Lines:</strong> The vertical dashed lines at 25 kg/m² and 30 kg/m² represent the thresholds for overweight and obesity, respectively. The density curves show that many individuals have BMI values exceeding these thresholds.</li>
</ul>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>The visualizations clearly indicate that excess weight is prevalent among the Spanish adult population, with males having higher BMI on average than females. This analysis underscores the importance of addressing overweight and obesity through public health initiatives and policies.</p>
<p>By following these steps, we successfully load, clean, and visualize the data from the National Health Survey Spain 2020, providing a foundation for further health-related analysis.</p>
</section>
<section id="references" class="level1">
<h1>References:</h1>
<ul>
<li><a href="https://www.sanidad.gob.es/estadEstudios/estadisticas/EncuestaEuropea/Enc_Eur_Salud_en_Esp_2020.htm">Encuesta Europea de Salud en España 2020</a></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>importing</category>
  <category>data cleaning</category>
  <category>ggplot2</category>
  <category>tidyverse</category>
  <category>health</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/bmi_spain_2020/post.html</guid>
  <pubDate>Mon, 24 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>PokéRogue Random Team Selector in R</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/pokerogue_team/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Welcome to the PokéRogue Random Team Selector project!</p>
<p>PokéRogue is a fan-made roguelike game where players can select a team of up to 6 Starter Pokémon at the beginning of any run. Players have a total budget of either 10 or 15 points, depending on the game mode, to spend on these initial Starters. The more powerful the Pokémon, the more points they cost. Additionally, three random Starter Pokémon receive Pokérus each day, a condition that allows for faster experience gain and leveling up. Shiny Pokémon variants improve the player’s luck in obtaining better items. You can play PokéRogue for free <a href="https://pokerogue.net/">here</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/pokerogue_team/images/clipboard-3954178997.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">PokéRogue Starter selection screen</figcaption>
</figure>
</div>
<p>In this project, we will use R to create functions that randomly generate Pokémon teams based on the criteria mentioned above. We’ll start by loading the necessary libraries and data, then proceed to define various helper functions and main team creation functions. Finally, we’ll demonstrate how to create different teams using these functions.</p>
</section>
<section id="loading-libraries" class="level1">
<h1>Loading Libraries</h1>
<p>We start by loading the necessary libraries using <code>pacman::p_load</code>. This ensures that all required packages are installed and loaded.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(</span>
<span id="cb1-2">  tidyverse,</span>
<span id="cb1-3">  here,</span>
<span id="cb1-4">  rio</span>
<span id="cb1-5">)</span></code></pre></div>
</div>
</section>
<section id="loading-data" class="level1">
<h1>Loading Data</h1>
<p>Next, we load the dataset containing the list of available Pokémon. The data is imported from an Excel file using the <code>rio::import</code> function. This dataset includes information on whether the Pokémon has been caught, if it has a Shiny version, or if it has Pokérus.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">data_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pokerogue_team"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pokerogue starters list.xlsx"</span>))</span>
<span id="cb2-2"></span>
<span id="cb2-3">data_catched <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Catched <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Starter, Gen, Dex, Cost, Shiny, Pokerus)</span></code></pre></div>
</div>
<p>Let’s take a quick look at the imported data using <code>glimpse</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_catched)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 459
Columns: 6
$ Starter &lt;chr&gt; "Bulbasaur", "Charmander", "Squirtle", "Caterpie", "Weedle", "…
$ Gen     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…
$ Dex     &lt;dbl&gt; 1, 4, 7, 10, 13, 16, 19, 21, 23, 25, 27, 29, 32, 37, 39, 41, 4…
$ Cost    &lt;dbl&gt; 3, 3, 3, 1, 1, 2, 1, 1, 2, 4, 2, 3, 3, 3, 4, 2, 2, 1, 2, 3, 4,…
$ Shiny   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, 1, 1, NA, NA, NA, NA, NA, NA, NA, NA, …
$ Pokerus &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…</code></pre>
</div>
</div>
</section>
<section id="creating-functions" class="level1">
<h1>Creating Functions</h1>
<p>We define several helper functions to handle different aspects of the team selection process.</p>
<section id="select-random-pokémon" class="level2">
<h2 class="anchored" data-anchor-id="select-random-pokémon">Select Random Pokémon</h2>
<p>The <code>select_random_pokemon</code> function is designed to select a Pokémon from the available dataset based on specific criteria such as budget points, Pokérus status, cost, or exact cost.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">select_random_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pokerus =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expensive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exact =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) {</span>
<span id="cb5-2"></span>
<span id="cb5-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selects an affordable Pokémon with Pokérus</span></span>
<span id="cb5-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (pokerus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>){</span>
<span id="cb5-5">      data_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> points, Pokerus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>)</span>
<span id="cb5-6">  } </span>
<span id="cb5-7">  </span>
<span id="cb5-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selects an expensive Pókemon (all available points)</span></span>
<span id="cb5-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (expensive <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb5-10">      data_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(points, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(Cost)))</span>
<span id="cb5-11">  }</span>
<span id="cb5-12"></span>
<span id="cb5-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selects a Pokémon with an exact cost</span></span>
<span id="cb5-14">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (exact <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb5-15">    data_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> points)</span>
<span id="cb5-16">  }</span>
<span id="cb5-17">  </span>
<span id="cb5-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb5-19">    data_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> points)</span>
<span id="cb5-20">  }</span>
<span id="cb5-21">  </span>
<span id="cb5-22">  pokemon_selected <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(data_filtered)</span>
<span id="cb5-23">  pokemon_selected</span>
<span id="cb5-24">}</span></code></pre></div>
</div>
</section>
<section id="count-shiny-pokémon" class="level2">
<h2 class="anchored" data-anchor-id="count-shiny-pokémon">Count Shiny Pokémon</h2>
<p>The <code>count_shiny_pokemon</code> function counts the number of available shiny Pokémon in the dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">count_shiny_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb6-2">  data_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Shiny))</span>
<span id="cb6-3">  n_shiny <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data_filtered)</span>
<span id="cb6-4">  n_shiny</span>
<span id="cb6-5">}</span></code></pre></div>
</div>
</section>
<section id="update-available-pokémon" class="level2">
<h2 class="anchored" data-anchor-id="update-available-pokémon">Update Available Pokémon</h2>
<p>The <code>update_available_pokemon</code> function updates the list of available Pokémon by removing the ones that have already been selected.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">update_available_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(data_available, list_pokemon, already_chosen, current_pokemon) {</span>
<span id="cb7-2">  new_pokemon_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> list_pokemon[[current_pokemon]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Starter</span>
<span id="cb7-3">  already_chosen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(already_chosen, new_pokemon_name)</span>
<span id="cb7-4">  data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_available <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>Starter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> already_chosen)</span>
<span id="cb7-5">  data_available</span>
<span id="cb7-6">}</span></code></pre></div>
</div>
</section>
<section id="update-budget" class="level2">
<h2 class="anchored" data-anchor-id="update-budget">Update Budget</h2>
<p>The <code>update_budget</code> function updates the remaining budget after selecting a Pokémon.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">update_budget <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(budget_points, list_pokemon, current_pokemon) {</span>
<span id="cb8-2">  points_spent <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(list_pokemon[[current_pokemon]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Cost)</span>
<span id="cb8-3">  budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> budget_points <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> points_spent</span>
<span id="cb8-4">}</span></code></pre></div>
</div>
</section>
<section id="select-shiny-pokémon" class="level2">
<h2 class="anchored" data-anchor-id="select-shiny-pokémon">Select Shiny Pokémon</h2>
<p>The <code>select_shiny_pokemon</code> function selects a shiny Pokémon based on the budget. It can prioritize rarer shiny Pokémon if specified.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">select_shiny_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">best_shiny =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb9-2">  data_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> points, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Shiny))</span>
<span id="cb9-3"></span>
<span id="cb9-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (best_shiny <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb9-5">    data_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_filtered <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random_number =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data_filtered))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(Shiny), Cost, random_number) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-8">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>random_number)</span>
<span id="cb9-9"></span>
<span id="cb9-10">    pokemon_selected <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_filtered <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-11">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb9-12">    pokemon_selected <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_filtered <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-13">  }</span>
<span id="cb9-14">}</span></code></pre></div>
</div>
</section>
<section id="distribute-points" class="level2">
<h2 class="anchored" data-anchor-id="distribute-points">Distribute Points</h2>
<p>The <code>distribute_points</code> function distributes the available points among the team members.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">distribute_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_pokemon =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) {</span>
<span id="cb10-2">  distribution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_pokemon)</span>
<span id="cb10-3">  points_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> points <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_pokemon</span>
<span id="cb10-4"></span>
<span id="cb10-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (points_left <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb10-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>points_left) {</span>
<span id="cb10-7">      pokemon_slot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_pokemon, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-8">      distribution[pokemon_slot] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> distribution[pokemon_slot] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-9">    }</span>
<span id="cb10-10">  }</span>
<span id="cb10-11"></span>
<span id="cb10-12">  distribution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(distribution, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-13">  distribution</span>
<span id="cb10-14">}</span></code></pre></div>
</div>
</section>
</section>
<section id="creating-teams" class="level1">
<h1>Creating Teams</h1>
<p>With the helper functions defined, we now create the main team selection functions.</p>
<section id="create-team" class="level2">
<h2 class="anchored" data-anchor-id="create-team">Create Team</h2>
<p>The <code>create_team</code> function creates a team based on the specified budget and criteria such as Pokérus and shiny Pokémon.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">create_team <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pokerus =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shiny =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">best_shiny =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrange =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) {</span>
<span id="cb11-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the starting budget</span></span>
<span id="cb11-3">  budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> points</span>
<span id="cb11-4"></span>
<span id="cb11-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize empty lists and parameters</span></span>
<span id="cb11-6">  list_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb11-7">  current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-8">  already_chosen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb11-9">  data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_catched</span>
<span id="cb11-10"></span>
<span id="cb11-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First Pókemon, that may or may not be forced to be a Pokérus Pokémon</span></span>
<span id="cb11-12">  list_pokemon[[current_pokemon]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_random_pokemon</span>(data_available, budget_points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pokerus =</span> pokerus)</span>
<span id="cb11-13"></span>
<span id="cb11-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update already chosen pokemon</span></span>
<span id="cb11-15">  data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_available_pokemon</span>(data_available, list_pokemon, already_chosen, current_pokemon)</span>
<span id="cb11-16"></span>
<span id="cb11-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update disposible budget</span></span>
<span id="cb11-18">  budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_budget</span>(budget_points, list_pokemon, current_pokemon)</span>
<span id="cb11-19"></span>
<span id="cb11-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update current pókemon slot</span></span>
<span id="cb11-21">  current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-22"></span>
<span id="cb11-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find shiny Pókemon</span></span>
<span id="cb11-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (shiny <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb11-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Force a maximum of 6 Pókemon in the team, and calculate the number of shiny Pókemon to add</span></span>
<span id="cb11-26">    total_shiny_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count_shiny_pokemon</span>(data_available)</span>
<span id="cb11-27">    number_of_shinies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(shiny, total_shiny_available)</span>
<span id="cb11-28">    end_loop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, number_of_shinies <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-29"></span>
<span id="cb11-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill team with shiny Pókemon</span></span>
<span id="cb11-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> current_pokemon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>end_loop) {</span>
<span id="cb11-32">      list_pokemon[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_shiny_pokemon</span>(data_available, budget_points, best_shiny)</span>
<span id="cb11-33"></span>
<span id="cb11-34">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update already chosen pokemon</span></span>
<span id="cb11-35">      data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_available_pokemon</span>(data_available, list_pokemon, already_chosen, current_pokemon)</span>
<span id="cb11-36"></span>
<span id="cb11-37">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update disposible budget</span></span>
<span id="cb11-38">      budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_budget</span>(budget_points, list_pokemon, current_pokemon)</span>
<span id="cb11-39"></span>
<span id="cb11-40">      current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-41">    }</span>
<span id="cb11-42"></span>
<span id="cb11-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update current pókemon slot</span></span>
<span id="cb11-44">    team_after_shiny <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_rbind</span>(list_pokemon)</span>
<span id="cb11-45">    current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(team_after_shiny) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-46">  }</span>
<span id="cb11-47"></span>
<span id="cb11-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if there are still places to fill in the team (until the 5th place)</span></span>
<span id="cb11-49">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> budget_points <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb11-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop for rest of max 6 Pókemon</span></span>
<span id="cb11-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> current_pokemon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) {</span>
<span id="cb11-52">      list_pokemon[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_random_pokemon</span>(data_available, budget_points)</span>
<span id="cb11-53"></span>
<span id="cb11-54">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update already chosen pokemon</span></span>
<span id="cb11-55">      data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_available_pokemon</span>(data_available, list_pokemon, already_chosen, current_pokemon)</span>
<span id="cb11-56"></span>
<span id="cb11-57">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update disposible budget</span></span>
<span id="cb11-58">      budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_budget</span>(budget_points, list_pokemon, current_pokemon)</span>
<span id="cb11-59">      current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-60">    }</span>
<span id="cb11-61">  }</span>
<span id="cb11-62"></span>
<span id="cb11-63">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the last Pókemon spend all available points</span></span>
<span id="cb11-64">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> budget_points <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb11-65">    list_pokemon[[current_pokemon]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_random_pokemon</span>(data_available, budget_points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expensive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb11-66">  }</span>
<span id="cb11-67"></span>
<span id="cb11-68">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bind all Pókemon, in order of Generation and Dex number</span></span>
<span id="cb11-69">  final_team <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_rbind</span>(list_pokemon)</span>
<span id="cb11-70"></span>
<span id="cb11-71">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (arrange <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb11-72">    final_team <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-73">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(Gen, Dex)</span>
<span id="cb11-74">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb11-75">    final_team</span>
<span id="cb11-76">  }</span>
<span id="cb11-77">}</span></code></pre></div>
</div>
</section>
<section id="create-expensive-team" class="level2">
<h2 class="anchored" data-anchor-id="create-expensive-team">Create Expensive Team</h2>
<p>The <code>create_expensive_team</code> function creates a team that maximizes the use of the available budget by selecting the most expensive Pokémon possible.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">create_expensive_team <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrange =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) {</span>
<span id="cb12-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the starting budget</span></span>
<span id="cb12-3">  budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> points</span>
<span id="cb12-4"></span>
<span id="cb12-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize empty lists and parameters</span></span>
<span id="cb12-6">  list_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb12-7">  current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-8">  already_chosen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb12-9">  data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_catched</span>
<span id="cb12-10"></span>
<span id="cb12-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop for rest of max 6 Pókemon</span></span>
<span id="cb12-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> current_pokemon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) {</span>
<span id="cb12-13">    list_pokemon[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_random_pokemon</span>(data_available, budget_points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expensive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb12-14"></span>
<span id="cb12-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update already chosen pokemon</span></span>
<span id="cb12-16">    data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_available_pokemon</span>(data_available, list_pokemon, already_chosen, current_pokemon)</span>
<span id="cb12-17"></span>
<span id="cb12-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update disposible budget</span></span>
<span id="cb12-19">    budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_budget</span>(budget_points, list_pokemon, current_pokemon)</span>
<span id="cb12-20"></span>
<span id="cb12-21">    current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-22">  }</span>
<span id="cb12-23"></span>
<span id="cb12-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bind all Pókemon, in order of Generation and Dex number</span></span>
<span id="cb12-25"></span>
<span id="cb12-26">  final_team <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_rbind</span>(list_pokemon)</span>
<span id="cb12-27"></span>
<span id="cb12-28">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (arrange <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb12-29">    final_team <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-30">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(Gen, Dex)</span>
<span id="cb12-31">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb12-32">    final_team</span>
<span id="cb12-33">  }</span>
<span id="cb12-34">}</span></code></pre></div>
</div>
</section>
<section id="create-random-6-team" class="level2">
<h2 class="anchored" data-anchor-id="create-random-6-team">Create Random 6 Team</h2>
<p>The <code>create_random_6_team</code> function creates a team with a random distribution of points among the six Pokémon, optionally including a Pokérus Pokémon.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">create_random_6_team <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrange =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pokerus =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) {</span>
<span id="cb13-2"></span>
<span id="cb13-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the starting budget</span></span>
<span id="cb13-4">  budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> points</span>
<span id="cb13-5">  </span>
<span id="cb13-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize empty lists and parameters</span></span>
<span id="cb13-7">  list_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb13-8">  current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-9">  already_chosen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb13-10">  data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_catched</span>
<span id="cb13-11">  </span>
<span id="cb13-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a random distribution of points</span></span>
<span id="cb13-13">  distribution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distribute_points</span>(points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_pokemon =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb13-14"></span>
<span id="cb13-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Coerce a Pokérus Pókemon</span></span>
<span id="cb13-16">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (pokerus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>){</span>
<span id="cb13-17"></span>
<span id="cb13-18">    pokerus_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  data_available <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Pokerus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-21">    </span>
<span id="cb13-22">    list_pokemon[[current_pokemon]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pokerus_pokemon</span>
<span id="cb13-23"></span>
<span id="cb13-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update available</span></span>
<span id="cb13-25">    data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_available_pokemon</span>(data_available, list_pokemon, already_chosen, current_pokemon)</span>
<span id="cb13-26">    budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_budget</span>(budget_points, list_pokemon, current_pokemon)</span>
<span id="cb13-27">    current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-28"></span>
<span id="cb13-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate another distribution of points among the remaining 5 Pókemon</span></span>
<span id="cb13-30">    distribution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distribute_points</span>(budget_points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_pokemon =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb13-31">  }</span>
<span id="cb13-32">  </span>
<span id="cb13-33">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> current_pokemon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) {</span>
<span id="cb13-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find random pókemon according to the point distribution</span></span>
<span id="cb13-35">    list_pokemon[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_random_pokemon</span>(data_available, distribution[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exact =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb13-36">    </span>
<span id="cb13-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update</span></span>
<span id="cb13-38">    data_available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_available_pokemon</span>(data_available, list_pokemon, already_chosen, current_pokemon)</span>
<span id="cb13-39">    budget_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_budget</span>(budget_points, list_pokemon, current_pokemon)</span>
<span id="cb13-40">    current_pokemon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> current_pokemon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-41">  }</span>
<span id="cb13-42">  </span>
<span id="cb13-43">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bind all Pókemon, in order of Generation and Dex number</span></span>
<span id="cb13-44">  final_team <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_rbind</span>(list_pokemon)</span>
<span id="cb13-45">  </span>
<span id="cb13-46">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (arrange <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb13-47">    final_team <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(Gen, Dex)</span>
<span id="cb13-48">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb13-49">    final_team</span>
<span id="cb13-50">  }</span>
<span id="cb13-51">}</span></code></pre></div>
</div>
</section>
</section>
<section id="random-team-examples" class="level1">
<h1>Random Team Examples</h1>
<p>Now that we have our functions defined, let’s see them in action. Here are some examples of creating random Pokémon teams using different criteria.</p>
<section id="example-1-basic-team-with-a-budget-of-10-points" class="level2">
<h2 class="anchored" data-anchor-id="example-1-basic-team-with-a-budget-of-10-points">Example 1: Basic Team with a Budget of 10 Points</h2>
<p>This example creates a team with a budget of 10 points, without considering Pokérus or shiny variants, and arranges the team by Generation and Dex number.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_team</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pokerus =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrange =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   Starter Gen Dex Cost Shiny Pokerus
1 Hoothoot   2 163    1    NA    &lt;NA&gt;
2   Hoppip   2 187    1    NA    &lt;NA&gt;
3  Yveltal   6 717    8    NA    &lt;NA&gt;</code></pre>
</div>
</div>
</section>
<section id="example-2-enhanced-team-with-a-budget-of-15-points" class="level2">
<h2 class="anchored" data-anchor-id="example-2-enhanced-team-with-a-budget-of-15-points">Example 2: Enhanced Team with a Budget of 15 Points</h2>
<p>In this example, we create a team with a budget of 15 points, including Pokémon with Pokérus and up to 4 shiny Pokémon, prioritizing the best shiny variants. The team is also arranged by Generation and Dex number.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_team</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pokerus =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shiny =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">best_shiny =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrange =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Starter Gen Dex Cost Shiny Pokerus
1 Drowzee   1  96    3    NA     Yes
2   Unown   2 201    1     1    &lt;NA&gt;
3  Bidoof   4 399    1     2    &lt;NA&gt;
4   Burmy   4 412    1     1    &lt;NA&gt;
5    Uxie   4 480    7    NA    &lt;NA&gt;
6 Petilil   5 548    2     2    &lt;NA&gt;</code></pre>
</div>
</div>
</section>
<section id="example-3-most-expensive-team-with-a-budget-of-15-points" class="level2">
<h2 class="anchored" data-anchor-id="example-3-most-expensive-team-with-a-budget-of-15-points">Example 3: Most Expensive Team with a Budget of 15 Points</h2>
<p>Here, we create a team that maximizes the use of the budget by selecting the most expensive Pokémon available, with a total budget of 15 points.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_expensive_team</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     Starter Gen  Dex Cost Shiny Pokerus
1   Giratina   4  487    8    NA    &lt;NA&gt;
2 Iron Crown   9 1023    7    NA    &lt;NA&gt;</code></pre>
</div>
</div>
</section>
<section id="example-4-random-team-with-a-budget-of-10-points" class="level2">
<h2 class="anchored" data-anchor-id="example-4-random-team-with-a-budget-of-10-points">Example 4: Random Team with a Budget of 10 Points</h2>
<p>This example creates a random team with a budget of 10 points, including at least one Pokémon with Pokérus, and distributes the points randomly among the six Pokémon.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_random_6_team</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pokerus =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    Starter Gen Dex Cost Shiny Pokerus
1    Weedle   1  13    1    NA    &lt;NA&gt;
2   Spearow   1  21    1     1    &lt;NA&gt;
3     Zubat   1  41    2    NA    &lt;NA&gt;
4   Drowzee   1  96    3    NA     Yes
5 Poochyena   3 261    2    NA    &lt;NA&gt;
6    Bidoof   4 399    1     2    &lt;NA&gt;</code></pre>
</div>
</div>
<p>These examples demonstrate the flexibility and power of our team creation functions, allowing you to generate a variety of Pokémon teams tailored to your preferences and game mode. Whether you want a balanced team, a team with specific conditions, or the most powerful team possible within your budget, these functions can help you achieve that.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>With these functions, you can generate a variety of Pokémon teams for your PokéRogue adventures. Whether you want a balanced team, a team with the most expensive Pokémon, or a team with specific conditions like Pokérus or shiny variants, these functions have you covered.</p>
<p>Happy PokéRoguing!</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://pokerogue.net/">PokéRogue game</a>.</li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>pokerogue</category>
  <category>functions</category>
  <category>project</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/pokerogue_team/post.html</guid>
  <pubDate>Fri, 21 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Regular Expressions: Dealing with String Data in R, Part II</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/regular_expressions_2/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Regular expressions (regex) are a powerful tool for working with string data in R. They might seem complex at first, but with some practice, they can become an invaluable part of your data science toolkit. In this blog post, we will tackle the last four exercises from the <a href="https://r4ds.hadley.nz/">“R for Data Science” (2nd edition) book</a> on regular expressions. You can find the first part of the exercises <a href="https://carlosepistats.github.io/blog/posts/regular_expressions/post.html">here</a>.</p>
<p>Let’s dive into the world of regex and see how we can manipulate and search text data effectively.</p>
</section>
<section id="setting-up" class="level1">
<h1>Setting Up</h1>
<p>First, let’s load the necessary library:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
</section>
<section id="exercise-4-british-and-american-spellings" class="level1">
<h1>Exercise 4: British and American Spellings</h1>
<p><strong>Question:</strong> Create 11 regular expressions that match the British or American spellings for each of the following words: airplane/aeroplane, aluminum/aluminium, analog/analogue, ass/arse, center/centre, defense/defence, donut/doughnut, gray/grey, modeling/modelling, skeptic/sceptic, summarize/summarise. Try to make the sorthest possible regex!</p>
<p><strong>Solution:</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># airplane/aeroplane</span></span>
<span id="cb2-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"airplane"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aeroplane"</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a[ei]ro?plane"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;airplane&gt;
[2] │ &lt;aeroplane&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aluminum/aluminium</span></span>
<span id="cb4-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aluminum"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aluminium"</span>)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alumini?um"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;aluminum&gt;
[2] │ &lt;aluminium&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># analog/analogue</span></span>
<span id="cb6-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"analog"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"analogue"</span>)</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"analog(ue)?"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;analog&gt;
[2] │ &lt;analogue&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ass/arse</span></span>
<span id="cb8-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ass"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arse"</span>)</span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a[rs]se?"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;ass&gt;
[2] │ &lt;arse&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># center/centre</span></span>
<span id="cb10-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"centre"</span>)</span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cent(er|re)"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;center&gt;
[2] │ &lt;centre&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defense/defence</span></span>
<span id="cb12-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"defense"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"defence"</span>)</span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"defen[cs]e"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;defense&gt;
[2] │ &lt;defence&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># donut/doughnut</span></span>
<span id="cb14-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"donut"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"doughnut"</span>)</span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"do(ugh)?nut"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;donut&gt;
[2] │ &lt;doughnut&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gray/grey</span></span>
<span id="cb16-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>)</span>
<span id="cb16-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gr[ae]y"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;gray&gt;
[2] │ &lt;grey&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modeling/modelling</span></span>
<span id="cb18-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modeling"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modelling"</span>)</span>
<span id="cb18-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modell?ing"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;modeling&gt;
[2] │ &lt;modelling&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># skeptic/sceptic</span></span>
<span id="cb20-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"skeptic"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sceptic"</span>)</span>
<span id="cb20-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s[ck]eptic"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;skeptic&gt;
[2] │ &lt;sceptic&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># summarize/summarise</span></span>
<span id="cb22-2">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summarize"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summarise"</span>)</span>
<span id="cb22-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summari[sz]e"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;summarize&gt;
[2] │ &lt;summarise&gt;</code></pre>
</div>
</div>
</section>
<section id="exercise-5-switching-first-and-last-letters" class="level1">
<h1>Exercise 5: Switching First and Last Letters</h1>
<p><strong>Question:</strong> Switch the first and last letters in <code>words</code>. Which of those strings are still <code>words</code>?</p>
<p><strong>Solution:</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Inspect `words`</span></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] │ a
 [2] │ able
 [3] │ about
 [4] │ absolute
 [5] │ accept
 [6] │ account
 [7] │ achieve
 [8] │ across
 [9] │ act
[10] │ active
[11] │ actual
[12] │ add
[13] │ address
[14] │ admit
[15] │ advertise
[16] │ affect
[17] │ afford
[18] │ after
[19] │ afternoon
[20] │ again
... and 960 more</code></pre>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Replace first letter with last letter</span></span>
<span id="cb26-2">words_switch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(^.)(.*)(.$)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>)</span>
<span id="cb26-3"></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Explore that the change is correct</span></span>
<span id="cb26-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(words, words_switch) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     words      words_switch
[1,] "a"        "a"         
[2,] "able"     "ebla"      
[3,] "about"    "tboua"     
[4,] "absolute" "ebsoluta"  
[5,] "accept"   "tccepa"    
[6,] "account"  "tccouna"   </code></pre>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View words that are the same as their switched counterparts</span></span>
<span id="cb28-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words[words <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> words_switch])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] │ a
 [2] │ america
 [3] │ area
 [4] │ dad
 [5] │ dead
 [6] │ depend
 [7] │ educate
 [8] │ else
 [9] │ encourage
[10] │ engine
[11] │ europe
[12] │ evidence
[13] │ example
[14] │ excuse
[15] │ exercise
[16] │ expense
[17] │ experience
[18] │ eye
[19] │ health
[20] │ high
... and 17 more</code></pre>
</div>
</div>
</section>
<section id="exercise-6-describing-regular-expressions" class="level1">
<h1>Exercise 6: Describing Regular Expressions</h1>
<p><strong>Question:</strong> Describe in words what these regular expressions match (read carefully to see if each entry is a regular expression or a string that defines a regular expression):</p>
<ol type="a">
<li><code>^.*$</code></li>
<li><code>"\\{.+\\}"</code></li>
<li><code>\d{4}-\d{2}-\d{2}</code></li>
<li><code>"\\\\{4}"</code></li>
<li><code>\..\..\..</code></li>
<li><code>(.)\1\1</code></li>
<li><code>"(..)\\1"</code></li>
</ol>
<p><strong>Solution:</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ^.*$</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches any string, including an empty string, from start to end.</span></span>
<span id="cb30-3">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb30-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^.*$"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;hello&gt;
[2] │ &lt;hello world&gt;
[3] │ &lt;&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "\\{.+\\}"</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches one or more characters enclosed in curly braces {}.</span></span>
<span id="cb32-3">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{1}"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{1234}"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span>)</span>
<span id="cb32-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{.+</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;{1}&gt;
[2] │ &lt;{1234}&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># \d{4}-\d{2}-\d{2}</span></span>
<span id="cb34-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches numbers in the format YYYY-MM-DD.</span></span>
<span id="cb34-3">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-06-19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5678-56-56"</span>)</span>
<span id="cb34-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d{4}-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d{2}-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d{2}"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;2023-06-19&gt;
[2] │ &lt;5678-56-56&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "\\\\{4}"</span></span>
<span id="cb36-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches exactly four backslashes.</span></span>
<span id="cb36-3">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>, r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\\\\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"####"</span>)</span>
<span id="cb36-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">{4}"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;\\\\&gt;
[2] │ &lt;\\\\&gt;\\</code></pre>
</div>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># \..\..\..</span></span>
<span id="cb38-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches three characters separated by dots, e.g., .a.b.c</span></span>
<span id="cb38-3">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".a.b.c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".1.2.3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".x.y.z"</span>)</span>
<span id="cb38-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">..</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">..</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;.a.b.c&gt;
[2] │ &lt;.1.2.3&gt;
[3] │ &lt;.x.y.z&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (.)\1\1</span></span>
<span id="cb40-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches any character repeated three times in a row.</span></span>
<span id="cb40-3">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aaab"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bbbc"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ccc"</span>)</span>
<span id="cb40-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;aaa&gt;b
[2] │ &lt;bbb&gt;c
[3] │ &lt;ccc&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "(..)\\1"</span></span>
<span id="cb42-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches two characters repeated consecutively.</span></span>
<span id="cb42-3">strings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abab"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1212"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cdcd"</span>)</span>
<span id="cb42-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(strings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(..)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;abab&gt;
[2] │ &lt;1212&gt;
[3] │ &lt;cdcd&gt;</code></pre>
</div>
</div>
</section>
<section id="exercise-7-solving-beginner-regexp-crosswords" class="level1">
<h1>Exercise 7: Solving Beginner Regexp Crosswords</h1>
<p><strong>Question:</strong> Solve the beginner regexp crosswords (<a href="https://oreil.ly//Db3NF" class="uri">https://oreil.ly//Db3NF</a>).</p>
<p><strong>Solution:</strong></p>
<p>Here are the solutions to the beginner regex crosswords:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check crosswords function</span></span>
<span id="cb44-2">check_crosswords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(pattern_row_1, pattern_row_2, pattern_column_1, pattern_column_2, solution){</span>
<span id="cb44-3">solution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(solution, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb44-4">correct <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_flatten</span>(solution[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, ]), pattern_row_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> </span>
<span id="cb44-5">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_flatten</span>(solution[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ]), pattern_row_2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb44-6">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_flatten</span>(solution[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), pattern_column_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb44-7">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_flatten</span>(solution[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), pattern_column_2)</span>
<span id="cb44-8">correct</span>
<span id="cb44-9">}</span></code></pre></div>
</div>
<section id="crossword-1" class="level2">
<h2 class="anchored" data-anchor-id="crossword-1">Crossword 1</h2>
<p><img src="https://CarlosEpiStats.github.io/blog/posts/regular_expressions_2/Screenshot 2024-06-21 121408.png" class="img-fluid"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">pattern_row_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HE|LL|O+"</span></span>
<span id="cb45-2">pattern_row_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[PLEASE]+"</span></span>
<span id="cb45-3">pattern_column_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[^SPEAK]+"</span></span>
<span id="cb45-4">pattern_column_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EP|IP|EF"</span></span>
<span id="cb45-5"></span>
<span id="cb45-6">solution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P"</span>)</span>
<span id="cb45-7"></span>
<span id="cb45-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_crosswords</span>(pattern_row_1, pattern_row_2, pattern_column_1, pattern_column_2, solution)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="crossword-2" class="level2">
<h2 class="anchored" data-anchor-id="crossword-2">Crossword 2</h2>
<p><img src="https://CarlosEpiStats.github.io/blog/posts/regular_expressions_2/images/clipboard-1019878229.png" class="img-fluid"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1">pattern_row_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".*M?O.*"</span></span>
<span id="cb47-2">pattern_row_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(AN|FE|BE)"</span></span>
<span id="cb47-3">pattern_column_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(A|B|C)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span></span>
<span id="cb47-4">pattern_column_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(AB|OE|SK)"</span></span>
<span id="cb47-5"></span>
<span id="cb47-6">solution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>)</span>
<span id="cb47-7"></span>
<span id="cb47-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_crosswords</span>(pattern_row_1, pattern_row_2, pattern_column_1, pattern_column_2, solution)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="crossword-3" class="level2">
<h2 class="anchored" data-anchor-id="crossword-3">Crossword 3</h2>
<p><img src="https://CarlosEpiStats.github.io/blog/posts/regular_expressions_2/images/clipboard-420531577.png" class="img-fluid"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1">pattern_row_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(.)+</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span></span>
<span id="cb49-2">pattern_row_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[^ABRC]+"</span></span>
<span id="cb49-3">pattern_column_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[COBRA]+"</span></span>
<span id="cb49-4">pattern_column_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(AB|O|OR)+"</span></span>
<span id="cb49-5"></span>
<span id="cb49-6">solution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>)</span>
<span id="cb49-7"></span>
<span id="cb49-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_crosswords</span>(pattern_row_1, pattern_row_2, pattern_column_1, pattern_column_2, solution)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="crossword-4" class="level2">
<h2 class="anchored" data-anchor-id="crossword-4">Crossword 4</h2>
<p><img src="https://CarlosEpiStats.github.io/blog/posts/regular_expressions_2/images/clipboard-3189841030.png" class="img-fluid"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1">pattern_row_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[*]+"</span></span>
<span id="cb51-2">pattern_row_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/+"</span></span>
<span id="cb51-3">pattern_column_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".?.+"</span></span>
<span id="cb51-4">pattern_column_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".+"</span></span>
<span id="cb51-5"></span>
<span id="cb51-6">solution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)</span>
<span id="cb51-7"></span>
<span id="cb51-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_crosswords</span>(pattern_row_1, pattern_row_2, pattern_column_1, pattern_column_2, solution)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="crossword-5" class="level2">
<h2 class="anchored" data-anchor-id="crossword-5">Crossword 5</h2>
<p><img src="https://CarlosEpiStats.github.io/blog/posts/regular_expressions_2/images/clipboard-3908736113.png" class="img-fluid"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1">pattern_row_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18|19|20"</span></span>
<span id="cb53-2">pattern_row_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[6789]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d"</span></span>
<span id="cb53-3">pattern_column_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d[2480]"</span></span>
<span id="cb53-4">pattern_column_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"56|94|73"</span></span>
<span id="cb53-5"></span>
<span id="cb53-6">solution <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>)</span>
<span id="cb53-7"></span>
<span id="cb53-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_crosswords</span>(pattern_row_1, pattern_row_2, pattern_column_1, pattern_column_2, solution)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Regular expressions are a robust tool for string manipulation and text data analysis in R. While they may seem intimidating initially, with practice, they become a powerful asset in your data science toolkit. Through these exercises, we’ve explored various ways to utilize regex to solve complex text processing tasks, from matching patterns in different spellings to switching letters in words and solving regex-based puzzles. Keep practicing and experimenting with regular expressions to unlock their full potential in your data analysis projects.</p>
<p>Happy regexing!</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><p>Mastering Regular Expressions: Dealing with String Data in R, Part I. EpiStats Blog. <a href="https://carlosepistats.github.io/blog/posts/regular_expressions/post.html" class="uri">https://carlosepistats.github.io/blog/posts/regular_expressions/post.html</a></p></li>
<li><p>R for Data Science (2ed), written by Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund. <a href="https://r4ds.hadley.nz/" class="uri">https://r4ds.hadley.nz/</a></p></li>
<li><p>Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” <em>Journal of Open Source Software</em>, <em>4</em>(43), 1686. doi:10.21105/joss.01686 <a href="https://doi.org/10.21105/joss.01686" class="uri">https://doi.org/10.21105/joss.01686</a>.</p></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>tidyverse</category>
  <category>regex</category>
  <category>string</category>
  <category>text</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/regular_expressions_2/post.html</guid>
  <pubDate>Thu, 20 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Regular Expressions: Dealing with String Data in R, Part I</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/regular_expressions/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Regular expressions (regex) are a powerful tool for working with string data in R. They might seem complex at first, but with some practice, they can become an invaluable part of your data science toolkit. In this blog post, we will tackle the first three exercises from the <a href="https://r4ds.hadley.nz/">“R for Data Science” (2nd edition) book</a> on regular expressions. Let’s dive into the world of regex and see how we can manipulate and search text data effectively.</p>
</section>
<section id="setting-up" class="level1">
<h1>Setting Up</h1>
<p>First, let’s load the necessary library:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
</section>
<section id="exercise-1-matching-literal-strings" class="level1">
<h1>Exercise 1: Matching Literal Strings</h1>
<p><strong>Question:</strong> How would you match the literal string <code>"'\</code>? How about <code>"$^$"</code>?</p>
<p><strong>Solution:</strong></p>
<p>To match these literal strings, we need to handle special characters carefully. Special characters in regex need to be escaped with a backslash (<code>\</code>). Here’s how we can do it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">string_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("'\)"</span></span>
<span id="cb2-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">string_2 &lt;- r"("$^$")"</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"># Visualize the strings</span></span>
<span id="cb2-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">str_view(c(string_1, string_2))</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ "'\
[2] │ "$^$"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using escape backslashes</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string_1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"\'\\\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches "'\</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;"'\&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string_2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">^</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches "$^$"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;"$^$"&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using character classes</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string_2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[$]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">^[$]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matches "$^$" using character classes</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;"$^$"&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using raw strings (simplifies escaping)</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string_1, r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)") </span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;"'\&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string_2, r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("</span>\<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>\<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>\<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;"$^$"&gt;</code></pre>
</div>
</div>
<section id="exercise-2-why-patterns-dont-match-a-backslash" class="level2">
<h2 class="anchored" data-anchor-id="exercise-2-why-patterns-dont-match-a-backslash">Exercise 2: Why Patterns Don’t Match a Backslash</h2>
<p><strong>Question:</strong> Explain why each of these patterns don’t match a <code>\</code>:</p>
<ul>
<li><p>“\”</p></li>
<li><p>“\\”</p></li>
<li><p>“\\\”</p></li>
</ul>
<p><strong>Solution:</strong></p>
<p>Let’s break down why these patterns fail to match a single backslash:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(\)"</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ \</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str_view(string, "\") </span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This escapes the ", and the code is left incomplete</span></span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str_view(string, "\\") </span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This throws an error "Unrecognized backslash escape secuence", \\ is used to escape special characters, but none follows it</span></span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str_view(string, "\\\")</span></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This escapes the ", and the code is left incomplete</span></span>
<span id="cb16-9"></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Correct way:</span></span>
<span id="cb16-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This works because \\ in regex represents a literal backslash.</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;\&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using raw strings (simplifies escaping):</span></span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(string, r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only needs to escape the backslash once.</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;\&gt;</code></pre>
</div>
</div>
</section>
<section id="exercise-3-searching-within-a-corpus" class="level2">
<h2 class="anchored" data-anchor-id="exercise-3-searching-within-a-corpus">Exercise 3: Searching Within a Corpus</h2>
<p><strong>Question:</strong> Given the corpus of common words in <code>stringr::words</code>, create regular expressions that find all words that:</p>
<p>a. Start with “y”.</p>
<p>b. Don’t start with “y”.</p>
<p>c. End with “x”.</p>
<p>d. Are exactly three letters long. (Don’t cheat by using <code>str_length()</code>!)</p>
<p>e. Have seven letters or more.</p>
<p>f. Contain a vowel-consonant pair.</p>
<p>g. Contain at least two vowel-consonant pairs in a row.</p>
<p>h. Only consists of repeated vowel-consonant pairs.</p>
<p><strong>Solution:</strong></p>
<p>Here are the regex patterns to match each condition:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualize all words</span></span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] │ a
 [2] │ able
 [3] │ about
 [4] │ absolute
 [5] │ accept
 [6] │ account
 [7] │ achieve
 [8] │ across
 [9] │ act
[10] │ active
[11] │ actual
[12] │ add
[13] │ address
[14] │ admit
[15] │ advertise
[16] │ affect
[17] │ afford
[18] │ after
[19] │ afternoon
[20] │ again
... and 960 more</code></pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a. Start with "y".</span></span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^y"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[975] │ &lt;y&gt;ear
[976] │ &lt;y&gt;es
[977] │ &lt;y&gt;esterday
[978] │ &lt;y&gt;et
[979] │ &lt;y&gt;ou
[980] │ &lt;y&gt;oung</code></pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># b. Don't start with "y".</span></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^y"</span>)])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] │ a
 [2] │ able
 [3] │ about
 [4] │ absolute
 [5] │ accept
 [6] │ account
 [7] │ achieve
 [8] │ across
 [9] │ act
[10] │ active
[11] │ actual
[12] │ add
[13] │ address
[14] │ admit
[15] │ advertise
[16] │ affect
[17] │ afford
[18] │ after
[19] │ afternoon
[20] │ again
... and 954 more</code></pre>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># c. End with "x".</span></span>
<span id="cb26-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x$"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[108] │ bo&lt;x&gt;
[747] │ se&lt;x&gt;
[772] │ si&lt;x&gt;
[841] │ ta&lt;x&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># d. Are exactly three letters long. (Don't cheat by using str_length()!)</span></span>
<span id="cb28-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^[a-z]{3}$"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  [9] │ &lt;act&gt;
 [12] │ &lt;add&gt;
 [22] │ &lt;age&gt;
 [24] │ &lt;ago&gt;
 [26] │ &lt;air&gt;
 [27] │ &lt;all&gt;
 [38] │ &lt;and&gt;
 [41] │ &lt;any&gt;
 [51] │ &lt;arm&gt;
 [54] │ &lt;art&gt;
 [56] │ &lt;ask&gt;
 [68] │ &lt;bad&gt;
 [69] │ &lt;bag&gt;
 [73] │ &lt;bar&gt;
 [82] │ &lt;bed&gt;
 [89] │ &lt;bet&gt;
 [91] │ &lt;big&gt;
 [94] │ &lt;bit&gt;
[108] │ &lt;box&gt;
[109] │ &lt;boy&gt;
... and 90 more</code></pre>
</div>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e. Have seven letters or more.</span></span>
<span id="cb30-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^[a-z]{7,}$"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [4] │ &lt;absolute&gt;
 [6] │ &lt;account&gt;
 [7] │ &lt;achieve&gt;
[13] │ &lt;address&gt;
[15] │ &lt;advertise&gt;
[19] │ &lt;afternoon&gt;
[21] │ &lt;against&gt;
[31] │ &lt;already&gt;
[32] │ &lt;alright&gt;
[34] │ &lt;although&gt;
[36] │ &lt;america&gt;
[39] │ &lt;another&gt;
[43] │ &lt;apparent&gt;
[46] │ &lt;appoint&gt;
[47] │ &lt;approach&gt;
[48] │ &lt;appropriate&gt;
[53] │ &lt;arrange&gt;
[57] │ &lt;associate&gt;
[61] │ &lt;authority&gt;
[62] │ &lt;available&gt;
... and 198 more</code></pre>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># f. Contain a vowel-consonant pair.</span></span>
<span id="cb32-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[aeiou][^aeiou]"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [2] │ &lt;ab&gt;le
 [3] │ &lt;ab&gt;o&lt;ut&gt;
 [4] │ &lt;ab&gt;s&lt;ol&gt;&lt;ut&gt;e
 [5] │ &lt;ac&gt;c&lt;ep&gt;t
 [6] │ &lt;ac&gt;co&lt;un&gt;t
 [7] │ &lt;ac&gt;hi&lt;ev&gt;e
 [8] │ &lt;ac&gt;r&lt;os&gt;s
 [9] │ &lt;ac&gt;t
[10] │ &lt;ac&gt;t&lt;iv&gt;e
[11] │ &lt;ac&gt;tu&lt;al&gt;
[12] │ &lt;ad&gt;d
[13] │ &lt;ad&gt;dr&lt;es&gt;s
[14] │ &lt;ad&gt;m&lt;it&gt;
[15] │ &lt;ad&gt;v&lt;er&gt;t&lt;is&gt;e
[16] │ &lt;af&gt;f&lt;ec&gt;t
[17] │ &lt;af&gt;f&lt;or&gt;d
[18] │ &lt;af&gt;t&lt;er&gt;
[19] │ &lt;af&gt;t&lt;er&gt;no&lt;on&gt;
[20] │ &lt;ag&gt;a&lt;in&gt;
[21] │ &lt;ag&gt;a&lt;in&gt;st
... and 924 more</code></pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># g. Contain at least two vowel-consonant pairs in a row.</span></span>
<span id="cb34-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"([aeiou][^aeiou]){2,}"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  [4] │ abs&lt;olut&gt;e
 [23] │ &lt;agen&gt;t
 [30] │ &lt;alon&gt;g
 [36] │ &lt;americ&gt;a
 [39] │ &lt;anot&gt;her
 [42] │ &lt;apar&gt;t
 [43] │ app&lt;aren&gt;t
 [61] │ auth&lt;orit&gt;y
 [62] │ ava&lt;ilab&gt;le
 [63] │ &lt;awar&gt;e
 [64] │ &lt;away&gt;
 [70] │ b&lt;alan&gt;ce
 [75] │ b&lt;asis&gt;
 [81] │ b&lt;ecom&gt;e
 [83] │ b&lt;efor&gt;e
 [84] │ b&lt;egin&gt;
 [85] │ b&lt;ehin&gt;d
 [87] │ b&lt;enefit&gt;
[119] │ b&lt;usines&gt;s
[143] │ ch&lt;arac&gt;ter
... and 149 more</code></pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># h. Only consists of repeated vowel-consonant pairs.</span></span>
<span id="cb36-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^([aeiou][^aeiou])</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1+$"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No matches, let's try a positive match</span></span>
<span id="cb36-3"></span>
<span id="cb36-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test with known patterns</span></span>
<span id="cb36-5">pattern <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^([aeiou][^aeiou])</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1+$"</span></span>
<span id="cb36-6">pos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anananan"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"erer"</span>)</span>
<span id="cb36-7">neg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nananana"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"erere"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ananerer"</span>)</span>
<span id="cb36-8"></span>
<span id="cb36-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(pos, pattern)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] │ &lt;anananan&gt;
[2] │ &lt;erer&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_view</span>(neg, pattern)</span>
<span id="cb38-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It seems to work, there are no words with this pattern in stringr::words</span></span></code></pre></div>
</div>
<p>With these exercises, we’ve demonstrated how regular expressions can be used to manipulate and search text data in R. Whether you are searching for specific patterns or validating text data, regex provides a robust solution for your string processing needs.</p>
<p>See you soon in Part II of these exercises.</p>
<p>Happy regexing!</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><p>R for Data Science (2ed), written by Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund. <a href="https://r4ds.hadley.nz/" class="uri">https://r4ds.hadley.nz/</a></p></li>
<li><p>Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” <em>Journal of Open Source Software</em>, <em>4</em>(43), 1686. doi:10.21105/joss.01686 <a href="https://doi.org/10.21105/joss.01686" class="uri">https://doi.org/10.21105/joss.01686</a>.</p></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>tidyverse</category>
  <category>regex</category>
  <category>string</category>
  <category>text</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/regular_expressions/post.html</guid>
  <pubDate>Tue, 18 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring the count() Function in R’s tidyverse</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/dplyr_count/post.html</link>
  <description><![CDATA[ 



<p>R’s tidyverse is a collection of packages designed for data science. One of the most useful functions within this suite is <code>count()</code>, part of the <code>dplyr</code> package. This function is used to count occurrences of unique values within a dataset, which is crucial for data analysis and exploratory data analysis (EDA). In this blog post, we’ll delve into how <code>count()</code> works, particularly with the <code>sort = TRUE</code> option, and we’ll use datasets from the <code>medicaldata</code> package to illustrate its application.</p>
<section id="introduction-to-count" class="level1">
<h1>Introduction to <code>count()</code></h1>
<p>The <code>count()</code> function in <code>dplyr</code> is designed to count the number of occurrences of each unique value of one or more variables. It returns a data frame with the counts of these values. Here’s a basic syntax of the function:</p>
<p><code>count(data, vars, wt = NULL, sort = FALSE, name = "n")</code></p>
<ul>
<li><code>data</code>: The data frame.</li>
<li><code>vars</code>: The variable(s) to count unique values of.</li>
<li><code>wt</code>: Optional. If provided, counts will be weighted by this variable.</li>
<li><code>sort</code>: If <code>TRUE</code>, the resulting data frame will be sorted in descending order by the count.</li>
<li><code>name</code>: The name of the count column. Default is “n”.</li>
</ul>
</section>
<section id="using-count-with-sort-true" class="level1">
<h1>Using <code>count()</code> with <code>sort = TRUE</code></h1>
<p>Setting <code>sort = TRUE</code> orders the output by the count in descending order, which is helpful when you want to quickly see the most frequent values.</p>
<section id="example-with-the-medicaldata-package" class="level2">
<h2 class="anchored" data-anchor-id="example-with-the-medicaldata-package">Example with the <code>medicaldata</code> package</h2>
<p>The <code>medicaldata</code> package contains various datasets from medical research, which are great for demonstration. We’ll use the <code>covid_testing</code> dataset for our example.</p>
<p>First, install and load the required packages:</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("tidyverse")</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("medicaldata")</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(medicaldata)</span></code></pre></div>
</details>
</div>
<p>Next, load the <code>covid_testing</code> dataset and take a look at its structure:</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"covid_testing"</span>)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(covid_testing)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 15,524
Columns: 17
$ subject_id      &lt;dbl&gt; 1412, 533, 9134, 8518, 8967, 11048, 663, 2158, 3794, 4…
$ fake_first_name &lt;chr&gt; "jhezane", "penny", "grunt", "melisandre", "rolley", "…
$ fake_last_name  &lt;chr&gt; "westerling", "targaryen", "rivers", "swyft", "karstar…
$ gender          &lt;chr&gt; "female", "female", "male", "female", "male", "female"…
$ pan_day         &lt;dbl&gt; 4, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 1…
$ test_id         &lt;chr&gt; "covid", "covid", "covid", "covid", "covid", "covid", …
$ clinic_name     &lt;chr&gt; "inpatient ward a", "clinical lab", "clinical lab", "c…
$ result          &lt;chr&gt; "negative", "negative", "negative", "negative", "negat…
$ demo_group      &lt;chr&gt; "patient", "patient", "patient", "patient", "patient",…
$ age             &lt;dbl&gt; 0.0, 0.0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0, 0.0, 0.9, 0.9,…
$ drive_thru_ind  &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, …
$ ct_result       &lt;dbl&gt; 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45…
$ orderset        &lt;dbl&gt; 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, …
$ payor_group     &lt;chr&gt; "government", "commercial", NA, NA, "government", "com…
$ patient_class   &lt;chr&gt; "inpatient", "not applicable", NA, NA, "emergency", "r…
$ col_rec_tat     &lt;dbl&gt; 1.4, 2.3, 7.3, 5.8, 1.2, 1.4, 2.6, 0.7, 1.0, 7.1, 2.5,…
$ rec_ver_tat     &lt;dbl&gt; 5.2, 5.8, 4.7, 5.0, 6.4, 7.0, 4.2, 6.3, 5.6, 7.0, 3.8,…</code></pre>
</div>
</div>
<p>The <code>covid_testing</code> dataset contains data from deidentified results of COVID-19 testing at the Children’s Hospital of Pennsylvania (CHOP) in 2020. Suppose we want to count the number of participants according to the COVID-19 test result and sort the results by the count in descending order. Here’s how we can do that:</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">covid_testing <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(result, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sort =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
  result       n
  &lt;chr&gt;    &lt;int&gt;
1 negative 14358
2 positive   865
3 invalid    301</code></pre>
</div>
</div>
</section>
<section id="interpreting-the-results" class="level2">
<h2 class="anchored" data-anchor-id="interpreting-the-results">Interpreting the Results</h2>
<p>The output is a tibble where the first column is the test <code>result</code>, and the second column, named <code>n</code>, shows the counts. Because we used <code>sort = TRUE</code>, the result with the highest count (<code>negative</code>) will appear first (n = 14,358 patients), followed by positive results (n = 865), and invalid results (n = 301).</p>
</section>
<section id="adding-multiple-variables" class="level2">
<h2 class="anchored" data-anchor-id="adding-multiple-variables">Adding Multiple Variables</h2>
<p>You can also count combinations of multiple variables. For example, if we want to count combinations of result and gender:</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">covid_testing <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(result, gender, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sort =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  result   gender     n
  &lt;chr&gt;    &lt;chr&gt;  &lt;int&gt;
1 negative female  7237
2 negative male    7121
3 positive female   449
4 positive male     416
5 invalid  male     155
6 invalid  female   146</code></pre>
</div>
</div>
<p>This will give us a data frame with the counts of each result-gender combination, sorted by the count.</p>
</section>
</section>
<section id="practical-use-cases" class="level1">
<h1>Practical Use Cases</h1>
<p>The <code>count()</code> function is particularly useful for:</p>
<ul>
<li><strong>EDA</strong>: Quickly understanding the distribution of values in your dataset.</li>
<li><strong>Data Cleaning</strong>: Identifying and handling rare or common categories.</li>
<li><strong>Reporting</strong>: Summarizing data in a clear and sorted manner for presentations or reports.</li>
</ul>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>The <code>count()</code> function in R’s <code>tidyverse</code> is a powerful tool for summarizing data. By using the <code>sort = TRUE</code> option, you can quickly identify the most frequent values in your dataset. Whether you’re counting single variables or combinations of variables, <code>count()</code> simplifies the task and makes your data analysis workflow more efficient.</p>
<p>Happy counting!</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><p>Higgins P (2021). <em>medicaldata: Data Package for Medical Datasets</em>. R package version 0.2.0, <a href="https://CRAN.R-project.org/package=medicaldata" class="uri">https://CRAN.R-project.org/package=medicaldata</a>.</p></li>
<li><p>Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” <em>Journal of Open Source Software</em>, <em>4</em>(43), 1686. doi:10.21105/joss.01686 <a href="https://doi.org/10.21105/joss.01686" class="uri">https://doi.org/10.21105/joss.01686</a>.</p></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>tidyverse</category>
  <category>regex</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/dplyr_count/post.html</guid>
  <pubDate>Sun, 02 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Useful RStudio Shortcuts</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/tips_and_tricks_r4ds/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>I recently bought the acclaimed book <em>R for Data Science”</em>(2nd ed.) by Hadley Wichkam et al., and I’ve been finding interesting tidbits that I’d like to share. Most of them are quality-of-life tools that I wasn’t aware of, while others are simply cool tricks.</p>
<p>Note: These shortcuts works for RStudio on Windows. On macOS, replace “Ctrl” with “Cmd”.</p>
</section>
<section id="useful-shortcuts" class="level1">
<h1>Useful shortcuts</h1>
<p>The thing with shortcuts is that they don’t really stick to me when I’m starting to learn a new programming language, software tool, or whatever. It’s after I’ve spent hundreds of hours working with them that I stumble upon a small, innocuous shortcut that suddenly makes my life brighter and much easier. Today, I share a few that I’ve encountered in the first chapters of <em>R for Data Science</em> (R4DS for short).</p>
<p>Let’s illustrate them with an example code. I will use the sample datasets that come with the package <code>medicaldata</code>. Specifically, I’ll toy with the dataset called <code>strep_tb</code>, which represent a classic Randomized Controlled Trial on the effects of streptomycin to treat tuberculosis (in fact, it is considered the first modern randomized, placebo-controlled clinical trial).</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(medicaldata)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(here)</span>
<span id="cb1-4"></span>
<span id="cb1-5">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> medicaldata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>strep_tb</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 107
Columns: 13
$ patient_id          &lt;chr&gt; "0001", "0002", "0003", "0004", "0005", "0006", "0…
$ arm                 &lt;fct&gt; Control, Control, Control, Control, Control, Contr…
$ dose_strep_g        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…
$ dose_PAS_g          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…
$ gender              &lt;fct&gt; M, F, F, M, F, M, F, M, F, M, F, M, F, M, F, M, F,…
$ baseline_condition  &lt;fct&gt; 1_Good, 1_Good, 1_Good, 1_Good, 1_Good, 1_Good, 1_…
$ baseline_temp       &lt;fct&gt; 1_98-98.9F, 3_100-100.9F, 1_98-98.9F, 1_98-98.9F, …
$ baseline_esr        &lt;fct&gt; 2_11-20, 2_11-20, 3_21-50, 3_21-50, 3_21-50, 3_21-…
$ baseline_cavitation &lt;fct&gt; yes, no, no, no, no, no, yes, yes, yes, yes, no, y…
$ strep_resistance    &lt;fct&gt; 1_sens_0-8, 1_sens_0-8, 1_sens_0-8, 1_sens_0-8, 1_…
$ radiologic_6m       &lt;fct&gt; 6_Considerable_improvement, 5_Moderate_improvement…
$ rad_num             &lt;dbl&gt; 6, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5,…
$ improved            &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TR…</code></pre>
</div>
</div>
<section id="alt----" class="level2">
<h2 class="anchored" data-anchor-id="alt----"><code>Alt</code> + <code>-</code> : <code>&lt;-</code></h2>
<p>Here I’ve used the first of the shortcuts, believe it or not: <code>Alt</code> + <code>-</code> to create the assignment arrow <code>&lt;-</code>. Instead of having to type ““, then”<code>&lt;</code>“, then”<code>-</code>“, then”” (4 keys in total), now just with <code>Alt</code> + <code>-</code> (2 keys simultaneously) I can get the job done, because spacing is added automatically. A silly little trick, but very useful, especially when I’m working with a keyboard that doesn’t have the <code>&lt;</code> or <code>&gt;</code> keys in the same place as others.</p>
</section>
<section id="ctrl-up-list-all-similar-commands-in-the-consoles-history" class="level2">
<h2 class="anchored" data-anchor-id="ctrl-up-list-all-similar-commands-in-the-consoles-history"><code>Ctrl</code> + <code>Up</code> : List All Similar Commands in the Console’s History</h2>
<p>This I can’t show you with code, but with a screenshot of RStudio’s console. If you press <code>Ctrl</code> + <code>Up arrow</code>, you can see a list of previous commands that start with the same words. You can access commands that were typed even in previous R sessions working with different files. I find it useful to trace back to some command that I want to replicate.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/tips_and_tricks_r4ds/screenshot_01.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><code>Ctrl</code> + <code>Up</code> lets you look at your Console’s history of similar commands.</figcaption>
</figure>
</div>
</section>
<section id="f1-when-the-autocomplete-yellow-box-pops-up-access-the-help-file-of-that-function" class="level2">
<h2 class="anchored" data-anchor-id="f1-when-the-autocomplete-yellow-box-pops-up-access-the-help-file-of-that-function">F1 When the Autocomplete Yellow Box Pops Up : Access the Help File of That Function</h2>
<p>How many times have I tried to remember the specific syntax of a function and had to go back and forth between the actual code and typing <code>help()</code> or <code>?function</code> ? There was an easier way: just press <code>F1</code> When the little yellow box of autocomplete appears while typing the function. It makes the R Documentation file appear in the RStudio help panel, and I can look into it without even needing to stop from coding.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/tips_and_tricks_r4ds/screenshot_02.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><code>F1</code> when the autocomplete yellow box pops up…</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/tips_and_tricks_r4ds/screenshot_03.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">…the R Documentation help file appears right away in RStudio.</figcaption>
</figure>
</div>
</section>
<section id="ctrl-shift-r-create-sections-in-your-code" class="level2">
<h2 class="anchored" data-anchor-id="ctrl-shift-r-create-sections-in-your-code"><code>Ctrl</code> + <code>Shift</code> + <code>R</code>: Create Sections in Your Code</h2>
<p>One way to organize your R code more neatly is to use sections and sub-sections. To create a section, start with a comment (<code>#</code> followed by text), and end with a sequence of four or more hyphens or hashtags (<code>----</code> or <code>####</code>). That will tell RStudio that that particular line of text is a section, and you can jump between sections using the R editor window.</p>
<p>The shortcut <code>Ctrl</code> + <code>Shift</code> + <code>R</code> pops up a window for you to enter the label of the section, and a new section appears, saving you the trouble of typing all those hyphens manually.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/tips_and_tricks_r4ds/screenshot_04.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><code>Ctrl</code> + <code>Shift</code> + <code>R</code> makes creating sections easy and fast.</figcaption>
</figure>
</div>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is a section -------------------------------------------------------</span></span></code></pre></div>
</details>
</div>
</section>
<section id="other-shortcuts" class="level2">
<h2 class="anchored" data-anchor-id="other-shortcuts">Other Shortcuts</h2>
<p>Lastly, I’ll share some other useful shortcuts:</p>
<ul>
<li><p><code>Ctrl</code> + <code>Shift</code> + <code>P</code>: Open the “command palette” of RStudio, useful to find every command the IDE and its add-ins (like the “styler” package) have to offer, including their own shortcuts.</p></li>
<li><p><code>Ctrl</code> + <code>Shift</code> + <code>S</code>: Runs the whole script.</p></li>
<li><p><code>Ctrl</code> + <code>Shift</code> + <code>F10</code>: Restart the R session.</p></li>
</ul>
<p>That’s all for now. See you next time!</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://r4ds.hadley.nz/"><em>R for Data Science</em> (2nd ed)</a></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>ggplot</category>
  <category>tidyverse</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/tips_and_tricks_r4ds/post.html</guid>
  <pubDate>Fri, 24 May 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Create an Alluvial Plot in Stata</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/alluvial_plot_stata/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In this post, I explain how to create an alluvial plot using code in Stata.</p>
<section id="what-is-an-alluvial-diagram" class="level2">
<h2 class="anchored" data-anchor-id="what-is-an-alluvial-diagram">What is an Alluvial Diagram</h2>
<p>An alluvial diagram or plot displays the flow of information from one categorical variable or stage to the next. The term “alluvial” refers to its resemblance to the flow of a river.</p>
</section>
<section id="uses-of-alluvial-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="uses-of-alluvial-diagrams">Uses of Alluvial Diagrams</h2>
<p>Alluvial diagrams are commonly used in the following situations:</p>
<ul>
<li>To demonstrate the number of participants in a study transitioning from one baseline category to a subsequent category. For example, the number of participants randomized at the beginning of the study and who continue to follow-up at the end. It serves as a graphical supplement to flowcharts, which present information with arrows and boxes containing text and numbers.</li>
<li>To show the distribution of participants among different categorical variables. In this case, it provides a more “visually appealing” alternative to stacked column charts.</li>
</ul>
</section>
</section>
<section id="stata-code" class="level1">
<h1>Stata Code</h1>
<section id="preparations" class="level2">
<h2 class="anchored" data-anchor-id="preparations">Preparations</h2>
<p>For this example, we will use the <code>alluvial</code> command, which requires the installation of the <code>palettes</code> and <code>colrspace</code> commands. The data is a simulation of a comparison of two fictional diagnostic tests, called “Test A” and “Test B”, which can take values such as “1-very low”, “2-low”, “3-medium”, “4-high”, and “5-very high”.</p>
<div class="cell" data-execution_count="1">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode stata code-with-copy"><code class="sourceCode stata"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Install user-written commands</span></span>
<span id="cb1-2">net install alluvial, from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/asjadnaqvi/stata-alluvial/main/installation/"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">replace</span></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ssc</span> install palettes, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">replace</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ssc</span> install colrspace, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">replace</span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="2">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode stata code-with-copy"><code class="sourceCode stata"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Input data</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">clear</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">input test_b test_a</span>
<span id="cb2-5">    4   4</span>
<span id="cb2-6">    1   1</span>
<span id="cb2-7">    1   1</span>
<span id="cb2-8">    2   2</span>
<span id="cb2-9">    3   1</span>
<span id="cb2-10">    1   2</span>
<span id="cb2-11">    3   2</span>
<span id="cb2-12">    2   2</span>
<span id="cb2-13">    5   2</span>
<span id="cb2-14">    3   1</span>
<span id="cb2-15">    3   3</span>
<span id="cb2-16">    3   3</span>
<span id="cb2-17">    5   3</span>
<span id="cb2-18">    4   3</span>
<span id="cb2-19">    1   1</span>
<span id="cb2-20">    3   3</span>
<span id="cb2-21">    4   1</span>
<span id="cb2-22">    2   3</span>
<span id="cb2-23">    5   2</span>
<span id="cb2-24">    4   2</span>
<span id="cb2-25">    4   2</span>
<span id="cb2-26">    2   1</span>
<span id="cb2-27">    5   3</span>
<span id="cb2-28">    3   3</span>
<span id="cb2-29">    5   1</span>
<span id="cb2-30">    3   3</span>
<span id="cb2-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Label data</span></span>
<span id="cb2-34"></span>
<span id="cb2-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> test_a <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test A"</span></span>
<span id="cb2-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> test_b <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test B"</span></span>
<span id="cb2-37"></span>
<span id="cb2-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">define</span> high_low 1 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1-very low"</span> 2 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2-low"</span> 3 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3-medium"</span> 4 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4-high"</span> 5 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5-very high"</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">replace</span></span>
<span id="cb2-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">values</span> test_a test_b high_low</span>
<span id="cb2-40"></span>
<span id="cb2-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Tabulate</span></span>
<span id="cb2-42"></span>
<span id="cb2-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">tab</span> test_a test_b</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>

            |                   Test B
     Test A | 1-very lo      2-low   3-medium     4-high |     Total
------------+--------------------------------------------+----------
 1-very low |         3          1          2          1 |         8 
      2-low |         1          2          1          2 |         8 
   3-medium |         0          1          5          1 |         9 
     4-high |         0          0          0          1 |         1 
------------+--------------------------------------------+----------
      Total |         4          4          8          5 |        26 


            |   Test B
     Test A | 5-very hi |     Total
------------+-----------+----------
 1-very low |         1 |         8 
      2-low |         2 |         8 
   3-medium |         2 |         9 
     4-high |         0 |         1 
------------+-----------+----------
      Total |         5 |        26 </code></pre>
</div>
</div>
<p>In this fictional study, a total of 26 people underwent both diagnostic tests. We can see in the table that three people obtained a “very low” result in both tests, one person obtained a “very low” result in test A and “low” in test B, etc.</p>
<p>The table itself is informative but does not allow for quick and intuitive information extraction. This is where the alluvial plot comes in.</p>
</section>
<section id="alluvial-plot" class="level2">
<h2 class="anchored" data-anchor-id="alluvial-plot">Alluvial Plot</h2>
<div class="cell" data-execution_count="3">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode stata code-with-copy"><code class="sourceCode stata"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Alluvial plot</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">alluvial test_a test_b, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">palette</span>(RdYlBu, n(5)) labangle(0) novalues boxwidth(5) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">offset</span>(10) <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alluvial plot of results of Test A vs Test B."</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">size</span>(3)) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">note</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N = 26"</span>) graphregion(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">color</span>(<span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">white</span>)) showtot lwidth(0.01) lcolor(<span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">gray</span>) labpos(3)</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">qui</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">graph</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">export</span> fig1.svg, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">width</span>(1600) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">replace</span></span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/alluvial_plot_stata/fig1.svg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">alluvial_plot</figcaption>
</figure>
</div>
<p>In the alluvial diagram, the area of the colored zones is proportional to the frequency, so wider “flows” represent more participants.</p>
<p>The graph shows how there is a considerable “transfer” of participants between result levels in the two tests. For example, we see that slightly less than half of those with a “very low” result in Test A also obtained “very low” in Test B, but others obtained “low”, “medium”, “high”, and even “very high” results. We also clearly see how there are no participants with “very high” results in Test A, or that the only participant with a “high” result in Test A also had a “high” result in Test B.</p>
<p>In conclusion, alluvial diagrams provide a visual option for better understanding data flows between categories.</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://github.com/asjadnaqvi/stata-alluvial">alluvial Stata package</a></li>
<li><a href="https://friosavila.github.io/stata_do/stata_do1.html">This post explains how to run Stata code using Quarto</a></li>
</ul>


</section>

 ]]></description>
  <category>Stata</category>
  <category>plot</category>
  <category>alluvial</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/alluvial_plot_stata/post.html</guid>
  <pubDate>Sun, 10 Mar 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Interactive List of Japanese Words Using R Shiny Apps</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/kanji_app/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In a <a href="https://carlosepistats.github.io/blog/posts/kanji/post.html">previous post</a>, I demonstrated how to use R to load, explore, and filter data from a dataset containing Japanese characters, known as “kanji”.</p>
<p>Today, we’ll focus on making that data exploration interactive using the R package <code>shiny</code>.</p>
</section>
<section id="app-design" class="level1">
<h1>App Design</h1>
<p>Every interactive app has at least three components: input, output, and a back-end server. The server transforms the user’s input into output. My “kanji app” has the following input and output:</p>
<p><strong>Input</strong>:</p>
<ul>
<li>A list of kanji that the user is currently learning.</li>
</ul>
<p><strong>Output</strong>:</p>
<ul>
<li>A table with all the possible words formed by combination of those kanji, as well as their pronunciation and an English translation. This table can be downloaded in CSV or XLSX format.</li>
<li>A table with example sentences that contain words formed by combination of those kanji, as well as their pronunciation and an English translation.</li>
<li>A table that displays how many different words contain each of the learning kanji.</li>
</ul>
</section>
<section id="shiny-app" class="level1">
<h1>Shiny App</h1>
<p>Here you can find the embedded version of this Shiny app. To access the full screen version, click on <a href="https://epistats.shinyapps.io/Kanji_app/">this link</a>.</p>
 <iframe id="example1" src="https://epistats.shinyapps.io/Kanji_app/" style="border: 1px solid black; width: 100%; height: 720px"></iframe>
</section>
<section id="code-breakdown" class="level1">
<h1>Code Breakdown</h1>
<section id="setup-and-loading-data" class="level2">
<h2 class="anchored" data-anchor-id="setup-and-loading-data">Setup and Loading Data</h2>
<p>To begin, we need to load the necessary libraries and import the datasets. I’ll use five different datasets to form the whole “dictionary”:</p>
<ul>
<li>A list of kanji downloaded from <a href="https://www.kanjidatabase.com/index.php">Kanji database</a></li>
<li>A list of jukugo (words composed by two kanji) downloaded from <a href="https://www.kanjidatabase.com/index.php">Kanji database</a></li>
<li>A list of words obtained from an Anki deck from <a href="https://ankiweb.net/shared/info/2141233552">here</a></li>
<li>A list of sentences obtained from an Anki deck from <a href="https://ankiweb.net/shared/info/1880390099">here</a></li>
<li>A dataset of Japanese numbers from 0 to 100, created manually.</li>
</ul>
<p>Each dataset contains three columns: <code>word</code> (in kanji), <code>pronunciation</code> (in hiragana or romaji), and <code>meaning</code> (in English).</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loading necessary libraries ####</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(here)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(janitor)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readxl)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(writexl)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DT)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(flextable)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loading datasets ####</span></span>
<span id="cb1-12"></span>
<span id="cb1-13">file_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kanji_20240227_081842.csv"</span></span>
<span id="cb1-14">file_jukugo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jukugo_20240227_081908.csv"</span></span>
<span id="cb1-15">file_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimized Kore - Sheet1.csv"</span></span>
<span id="cb1-16">file_sentences1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sentences.xlsx"</span></span>
<span id="cb1-17">file_sentences2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sentences_core.xlsx"</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Kanji list ####</span></span>
<span id="cb1-20">data_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv2</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/kanji"</span>, file_kanji)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>()</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Jukugo list ####</span></span>
<span id="cb1-24">data_jukugo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv2</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/kanji"</span>, file_jukugo)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(frequency)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(comp_word, pronunciation, english_translation) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">word =</span> comp_word,</span>
<span id="cb1-29">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meaning =</span> english_translation) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep_all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-31">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change romaji</span></span>
<span id="cb1-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ji"</span>, pronunciation),</span>
<span id="cb1-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jy"</span>, pronunciation),</span>
<span id="cb1-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ti"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chi"</span>, pronunciation),</span>
<span id="cb1-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ty"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ch"</span>, pronunciation),</span>
<span id="cb1-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"si"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shi"</span>, pronunciation),</span>
<span id="cb1-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shy"</span>, pronunciation),</span>
<span id="cb1-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tu"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tsu"</span>, pronunciation),</span>
<span id="cb1-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hu"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fu"</span>, pronunciation)</span>
<span id="cb1-41">    )</span>
<span id="cb1-42"></span>
<span id="cb1-43"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## word list ####</span></span>
<span id="cb1-44">data_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/kanji"</span>, file_words)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(core_index) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(vocab_expression, vocab_kana, vocab_meaning) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">word =</span> vocab_expression,</span>
<span id="cb1-49">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> vocab_kana,</span>
<span id="cb1-50">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meaning =</span> vocab_meaning) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep_all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb1-52"></span>
<span id="cb1-53"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Number list ####</span></span>
<span id="cb1-54"></span>
<span id="cb1-55">data_numbers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-56">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">word =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"零"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十"</span>, </span>
<span id="cb1-57">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十九"</span>, </span>
<span id="cb1-58">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十七"</span>, </span>
<span id="cb1-59">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二十九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十五"</span>, </span>
<span id="cb1-60">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三十九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十三"</span>, </span>
<span id="cb1-61">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"四十九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十一"</span>, </span>
<span id="cb1-62">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五十九"</span>, </span>
<span id="cb1-63">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十七"</span>, </span>
<span id="cb1-64">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"六十九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十五"</span>, </span>
<span id="cb1-65">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"七十九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十三"</span>, </span>
<span id="cb1-66">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"八十九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十一"</span>, </span>
<span id="cb1-67">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十四"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十五"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十六"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十七"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十八"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"九十九"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"百"</span>),</span>
<span id="cb1-68">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pronunciation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"れい"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"いち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"に"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"し"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅう"</span>,</span>
<span id="cb1-69">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"じゅうきゅう"</span>,</span>
<span id="cb1-70">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"にじゅうきゅう"</span>,</span>
<span id="cb1-71">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"さんじゅうきゅう"</span>,</span>
<span id="cb1-72">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"よんじゅうきゅう"</span>,</span>
<span id="cb1-73">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ごじゅうきゅう"</span>,</span>
<span id="cb1-74">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ろくじゅうきゅう"</span>,</span>
<span id="cb1-75">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"しちじゅうきゅう"</span>,</span>
<span id="cb1-76">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"はちじゅうきゅう"</span>,</span>
<span id="cb1-77">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅう"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅういち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうに"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうさん"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうし"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうご"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうろく"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうしち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうはち"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"きゅうじゅうきゅう"</span>,</span>
<span id="cb1-78">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ひゃく"</span>),</span>
<span id="cb1-79">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meaning =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-80">  )</span>
<span id="cb1-81"></span>
<span id="cb1-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sentence list ####</span></span>
<span id="cb1-83">data_sentences1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/kanji"</span>, file_sentences1)) </span>
<span id="cb1-84">data_sentences2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/kanji"</span>, file_sentences2))</span>
<span id="cb1-85"></span>
<span id="cb1-86">data_sentences <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(data_sentences1, data_sentences2)</span>
<span id="cb1-87"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(data_sentences1, data_sentences2)</span>
<span id="cb1-88"></span>
<span id="cb1-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract kana ####</span></span>
<span id="cb1-90"></span>
<span id="cb1-91">hiragana_chars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intToUtf8</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12353</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12438</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unicode range for hiragana characters</span></span>
<span id="cb1-92">katakana_chars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intToUtf8</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12448</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12543</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unicode range for katakana characters</span></span>
<span id="cb1-93"></span>
<span id="cb1-94">kana <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(hiragana_chars, katakana_chars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split_1</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb1-97"></span>
<span id="cb1-98"></span>
<span id="cb1-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All data ####</span></span>
<span id="cb1-100">data_bind <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_words <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-101">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(data_sentences <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(word, pronunciation, meaning),</span>
<span id="cb1-102">        data_numbers,</span>
<span id="cb1-103">        data_jukugo) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-104">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">word =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(word, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[ a-zA-Z]"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-105">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep_all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-106"></span>
<span id="cb1-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract kanji ####</span></span>
<span id="cb1-108"></span>
<span id="cb1-109">all_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_kanji <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-110">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(kanji) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-111">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(data_bind <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-112">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kanji =</span> word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-113">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kanji =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(kanji, kana)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-114">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(kanji <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-115">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-116">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-117">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split_1</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-118">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>()</span>
<span id="cb1-119">  </span>
<span id="cb1-120"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Separate individual kanji from all words ####</span></span>
<span id="cb1-121">data_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_bind <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-122">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kanji =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(word, kana)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-123">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate_wider_position</span>(kanji, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kanji_1"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb1-124">                                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kanji_2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-125">                                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kanji_3"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb1-126">                                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kanji_4"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb1-127">                                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kanji_5"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-128">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">too_few =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"align_start"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-129">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_1))</span>
<span id="cb1-130"></span>
<span id="cb1-131"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flextable</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(data_all))</span></code></pre></div>
</details>
<div class="cell-output-display">

<div class="tabwid"><style>.cl-1864bdba{}.cl-185467bc{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-1857bade{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-1857cff6{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-1857d000{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-1857d001{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing="true" class="cl-1864bdba"><thead><tr style="overflow-wrap:break-word;"><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">word</span></p></th><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">pronunciation</span></p></th><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">meaning</span></p></th><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">kanji_1</span></p></th><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">kanji_2</span></p></th><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">kanji_3</span></p></th><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">kanji_4</span></p></th><th class="cl-1857cff6"><p class="cl-1857bade"><span class="cl-185467bc">kanji_5</span></p></th></tr></thead><tbody><tr style="overflow-wrap:break-word;"><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">見る</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">みる</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">see, look at</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">見</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">円</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">えん</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">circle</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">円</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">多い</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">おおい</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">lots of</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">多</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">家</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">うち</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">house, home</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">家</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">新しい</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">あたらしい</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">new</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc">新</span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d000"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc">私</span></p></td><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc">わたし</span></p></td><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc">I</span></p></td><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc">私</span></p></td><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td><td class="cl-1857d001"><p class="cl-1857bade"><span class="cl-185467bc"></span></p></td></tr></tbody></table></div>
</div>
</div>
<p>Here’s a breakdown of the final “dictionary”:</p>
<ul>
<li><code>word</code>: This column contains the Japanese word.</li>
<li><code>pronunciation</code>: It shows the pronunciation of the word.</li>
<li><code>meaning</code>: This column provides the English translation or meaning of the word.</li>
<li><code>kanji_1</code>, <code>kanji_2</code>, <code>kanji_3</code>, <code>kanji_4</code>, <code>kanji_5</code>: These columns represents the kanji characters that compose each word.</li>
</ul>
<p>Each row corresponds to a different Japanese word, and the columns contain related information about each word, including its pronunciation, meaning in English, and associated kanji characters.</p>
<p>For example:</p>
<ul>
<li>The word “見る” (miru) means “see, look at”, and its associated kanji is “見”.</li>
<li>The word “円” (en) means “circle”, and its associated kanji is “円”.</li>
<li>The word “多い” (ooi) means “lots of”, and its associated kanji is “多”.</li>
</ul>
</section>
<section id="custom-functions-to-create-the-study-table" class="level2">
<h2 class="anchored" data-anchor-id="custom-functions-to-create-the-study-table">Custom Functions to Create the Study Table</h2>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Functions ####</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">make_study_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(kanji_learning) {</span>
<span id="cb2-4">  </span>
<span id="cb2-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select words with only those kanji</span></span>
<span id="cb2-6">  study_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_all <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(kanji_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> kanji_learning,  </span>
<span id="cb2-8">             kanji_2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> kanji_learning <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_2),</span>
<span id="cb2-9">             kanji_3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> kanji_learning <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_3),</span>
<span id="cb2-10">             kanji_4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> kanji_learning <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_4),</span>
<span id="cb2-11">             kanji_5 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> kanji_learning <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_5)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kanji_"</span>))</span>
<span id="cb2-13">  </span>
<span id="cb2-14">  study_words</span>
<span id="cb2-15">}</span>
<span id="cb2-16"></span>
<span id="cb2-17"></span>
<span id="cb2-18">make_sentences_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(kanji_learning) {</span>
<span id="cb2-19">  </span>
<span id="cb2-20">  kanji_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(kanji_learning, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb2-21">  </span>
<span id="cb2-22">  letters_lower <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(letters, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb2-23">  letters_upper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(LETTERS, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb2-24">  numbers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb2-25">  symbols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"。|、|「|」|？|!|%|！|々"</span></span>
<span id="cb2-26">  </span>
<span id="cb2-27">  other_characters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(letters_lower, letters_upper, numbers, symbols), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb2-28">  </span>
<span id="cb2-29">  sentences_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_sentences <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">only_kanji =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(sentence, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(kana, other_characters, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)),</span>
<span id="cb2-31">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unknown_kanji =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(only_kanji, kanji_list)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(unknown_kanji <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(kanji_list, sentence)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(sentence, sentence_hiragana, sentence_meaning)</span>
<span id="cb2-34">  </span>
<span id="cb2-35">  sentences_list</span>
<span id="cb2-36">  </span>
<span id="cb2-37">}</span></code></pre></div>
</details>
</div>
<p>This code defines two functions: <code>make_study_list</code> and <code>make_sentences_list</code>. Let’s break down what each function does:</p>
<ol type="1">
<li><strong><code>make_study_list</code> function</strong>:</li>
</ol>
<ul>
<li><strong>Input</strong>: <code>kanji_learning</code> is a vector containing the kanji characters that the user wants to learn.</li>
<li><strong>Output</strong>: <code>study_words</code> is a data frame containing words from <code>data_all</code> dataset that contain only the kanji characters specified in <code>kanji_learning</code>.</li>
<li><strong>Functionality</strong>:
<ul>
<li>Filters the <code>data_all</code> dataset to select words that contain only the kanji characters specified in <code>kanji_learning</code>.</li>
<li>This is done by filtering the rows where each kanji column (<code>kanji_1</code>, <code>kanji_2</code>, <code>kanji_3</code>, <code>kanji_4</code>, <code>kanji_5</code>) matches one of the kanji characters in <code>kanji_learning</code>, or where the kanji column is <code>NA</code> (missing).</li>
<li>Removes the <code>kanji_</code> columns from the resulting dataset.</li>
<li>Returns the filtered dataset containing only the selected words.</li>
</ul></li>
</ul>
<ol start="2" type="1">
<li><strong><code>make_sentences_list</code> function</strong>:</li>
</ol>
<ul>
<li><strong>Input</strong>: <code>kanji_learning</code> is a vector containing the kanji characters that the user wants to learn.</li>
<li><strong>Output</strong>: <code>sentences_list</code> is a data frame containing sentences from <code>data_sentences</code> dataset that contain kanji characters specified in <code>kanji_learning</code>.</li>
<li><strong>Functionality</strong>:
<ul>
<li>Concatenates the kanji characters in <code>kanji_learning</code> into a single regular expression pattern <code>kanji_list</code>.</li>
<li>Defines regular expression patterns for lowercase letters, uppercase letters, numbers, and symbols.</li>
<li>Uses these patterns to define other_characters, which includes all characters that are not kanji.</li>
<li>For each sentence in <code>data_sentences</code>, removes all characters that are not kanji, then removes all kanji characters that are not in <code>kanji_learning</code>.</li>
<li>Filters the sentences to keep only those that contain kanji characters specified in <code>kanji_learning</code>.</li>
<li>Selects the filtered sentences along with their corresponding hiragana representation and meaning.</li>
</ul></li>
<li><strong>Note</strong>: The <code>str_remove_all</code> function from the stringr package is used to remove all occurrences of a pattern from a string.</li>
</ul>
<p>These functions are designed to help users generate study lists of words and sentences containing specific kanji characters they want to learn.</p>
</section>
<section id="shiny-app-code" class="level2">
<h2 class="anchored" data-anchor-id="shiny-app-code">Shiny App Code</h2>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shiny App ####</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb3-4">  </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"List Japanese Words Including Selected Kanji"</span>),</span>
<span id="cb3-6">  </span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb3-8">    </span>
<span id="cb3-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb3-10">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Created by CarlosEpiStats"</span>),</span>
<span id="cb3-11">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uiOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blog_link"</span>),</span>
<span id="cb3-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"downloadExcel"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Download Excel file"</span>),</span>
<span id="cb3-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"downloadCSV"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Download CSV file"</span>),</span>
<span id="cb3-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kanji_selected"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Select Kanji:"</span>,  </span>
<span id="cb3-15">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> all_kanji, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">multiple =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17">    ),</span>
<span id="cb3-18">    </span>
<span id="cb3-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>(</span>
<span id="cb3-20">      </span>
<span id="cb3-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabsetPanel</span>(</span>
<span id="cb3-22">        </span>
<span id="cb3-23">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(</span>
<span id="cb3-24">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"List of words"</span>,</span>
<span id="cb3-25">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_kanji"</span>),</span>
<span id="cb3-26">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_words"</span>),</span>
<span id="cb3-27">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DTOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table_words"</span>)</span>
<span id="cb3-28">          ),</span>
<span id="cb3-29">        </span>
<span id="cb3-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(</span>
<span id="cb3-31">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"List of sentences"</span>,</span>
<span id="cb3-32">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_sentences"</span>),</span>
<span id="cb3-33">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DTOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table_sentences"</span>)</span>
<span id="cb3-34">        ),</span>
<span id="cb3-35">        </span>
<span id="cb3-36">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(</span>
<span id="cb3-37">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stats"</span>,</span>
<span id="cb3-38">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tableOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number_words_per_kanji"</span>)</span>
<span id="cb3-39">        )</span>
<span id="cb3-40">      )</span>
<span id="cb3-41">      </span>
<span id="cb3-42">      </span>
<span id="cb3-43">    )</span>
<span id="cb3-44">  )</span>
<span id="cb3-45">)</span>
<span id="cb3-46"></span>
<span id="cb3-47">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb3-48">  </span>
<span id="cb3-49">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Blog link ####</span></span>
<span id="cb3-50">  url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CarlosEpiStats"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://carlosepistats.github.io/blog/"</span>)</span>
<span id="cb3-51"> </span>
<span id="cb3-52">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>blog_link <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderUI</span>({</span>
<span id="cb3-53">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tagList</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blog:"</span>, url)</span>
<span id="cb3-54">  })</span>
<span id="cb3-55">  </span>
<span id="cb3-56">  </span>
<span id="cb3-57">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reactive table words ####</span></span>
<span id="cb3-58">  rval_table_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb3-59">    study_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_study_list</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected)</span>
<span id="cb3-60">    study_table</span>
<span id="cb3-61">  })</span>
<span id="cb3-62">  </span>
<span id="cb3-63">  </span>
<span id="cb3-64">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reactive table sentences ####</span></span>
<span id="cb3-65">  rval_table_sentences <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb3-66">    study_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_sentences_list</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected)</span>
<span id="cb3-67">    study_table</span>
<span id="cb3-68">  })</span>
<span id="cb3-69">  </span>
<span id="cb3-70">  </span>
<span id="cb3-71">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reactive table counter ####</span></span>
<span id="cb3-72">  rval_table_counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb3-73">    </span>
<span id="cb3-74">    study_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_all <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-75">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(kanji_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected, </span>
<span id="cb3-76">             kanji_2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_2),</span>
<span id="cb3-77">             kanji_3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_3),</span>
<span id="cb3-78">             kanji_4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_4),</span>
<span id="cb3-79">             kanji_5 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(kanji_5))</span>
<span id="cb3-80">    </span>
<span id="cb3-81">    learning_length <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected)</span>
<span id="cb3-82">    </span>
<span id="cb3-83">    kanji_counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb3-84">    </span>
<span id="cb3-85">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>learning_length){</span>
<span id="cb3-86">      </span>
<span id="cb3-87">      kanji_counter[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> study_words <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-88">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(kanji_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> </span>
<span id="cb3-89">                 kanji_2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> </span>
<span id="cb3-90">                 kanji_3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb3-91">                 kanji_4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> </span>
<span id="cb3-92">                 kanji_5 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected[i] ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-93">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>()</span>
<span id="cb3-94">      </span>
<span id="cb3-95">    }</span>
<span id="cb3-96">    </span>
<span id="cb3-97">    table_counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kanji =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected,</span>
<span id="cb3-98">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> kanji_counter)</span>
<span id="cb3-99">    </span>
<span id="cb3-100">    table_counter</span>
<span id="cb3-101">    </span>
<span id="cb3-102">  })</span>
<span id="cb3-103">  </span>
<span id="cb3-104">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reactive number kanji ####</span></span>
<span id="cb3-105">  rval_n_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb3-106">    number_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kanji_selected)</span>
<span id="cb3-107">    number_words</span>
<span id="cb3-108">  }) </span>
<span id="cb3-109">  </span>
<span id="cb3-110">  </span>
<span id="cb3-111">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reactive number words ####</span></span>
<span id="cb3-112">  rval_n_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb3-113">    study_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_table_words</span>()</span>
<span id="cb3-114">    number_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(study_table)</span>
<span id="cb3-115">    number_words</span>
<span id="cb3-116">  })</span>
<span id="cb3-117">  </span>
<span id="cb3-118">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reactive number sentences ####</span></span>
<span id="cb3-119">  rval_n_sentences <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb3-120">    study_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_table_sentences</span>()</span>
<span id="cb3-121">    number_sentences <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(study_table)</span>
<span id="cb3-122">    number_sentences</span>
<span id="cb3-123">  })</span>
<span id="cb3-124">  </span>
<span id="cb3-125">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output number words ####</span></span>
<span id="cb3-126">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb3-127">    n_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_n_words</span>()</span>
<span id="cb3-128">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of words: "</span>, n_words)</span>
<span id="cb3-129">  })</span>
<span id="cb3-130">  </span>
<span id="cb3-131">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output number Kanji ####</span></span>
<span id="cb3-132">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb3-133">    number_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_n_kanji</span>()</span>
<span id="cb3-134">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of kanji: "</span>, number_kanji)</span>
<span id="cb3-135">  })</span>
<span id="cb3-136">  </span>
<span id="cb3-137">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output number sentences ####</span></span>
<span id="cb3-138">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n_sentences <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb3-139">    number_sentences <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_n_sentences</span>()</span>
<span id="cb3-140">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of sentences: "</span>, number_sentences)</span>
<span id="cb3-141">  })</span>
<span id="cb3-142">  </span>
<span id="cb3-143">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output table words ####</span></span>
<span id="cb3-144">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>table_words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderDT</span>({</span>
<span id="cb3-145">    study_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_table_words</span>()</span>
<span id="cb3-146">    study_table</span>
<span id="cb3-147">  })</span>
<span id="cb3-148">  </span>
<span id="cb3-149">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output table sentences ####</span></span>
<span id="cb3-150">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>table_sentences <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderDT</span>({</span>
<span id="cb3-151">    study_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_table_sentences</span>()</span>
<span id="cb3-152">    study_table</span>
<span id="cb3-153">  })</span>
<span id="cb3-154">  </span>
<span id="cb3-155">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output table counter ####</span></span>
<span id="cb3-156">  </span>
<span id="cb3-157">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>number_words_per_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderTable</span>({</span>
<span id="cb3-158">    table_counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_table_counter</span>()</span>
<span id="cb3-159">    table_counter</span>
<span id="cb3-160">  })</span>
<span id="cb3-161">  </span>
<span id="cb3-162">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download Excel ####</span></span>
<span id="cb3-163">  </span>
<span id="cb3-164">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>downloadExcel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadHandler</span>(</span>
<span id="cb3-165">    </span>
<span id="cb3-166">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>() {</span>
<span id="cb3-167">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"study_list_k"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_n_kanji</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_w"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_n_words</span>(),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".xlsx"</span>)</span>
<span id="cb3-168">    },</span>
<span id="cb3-169">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">content =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(file) {</span>
<span id="cb3-170">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_xlsx</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_table_words</span>(), file)</span>
<span id="cb3-171">      </span>
<span id="cb3-172">    })</span>
<span id="cb3-173">  </span>
<span id="cb3-174">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download CSV ####</span></span>
<span id="cb3-175">  </span>
<span id="cb3-176">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>downloadCSV <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadHandler</span>(</span>
<span id="cb3-177">    </span>
<span id="cb3-178">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>() {</span>
<span id="cb3-179">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"study_list_k"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_n_kanji</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_w"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_n_words</span>(),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".csv"</span>)</span>
<span id="cb3-180">    },</span>
<span id="cb3-181">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">content =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(file) {</span>
<span id="cb3-182">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rval_table_words</span>(), file)</span>
<span id="cb3-183">      </span>
<span id="cb3-184">    })</span>
<span id="cb3-185"></span>
<span id="cb3-186">}</span>
<span id="cb3-187"></span>
<span id="cb3-188"></span>
<span id="cb3-189"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ui =</span> ui, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server =</span> server)</span></code></pre></div>
</details>
</div>
<p>This code defines a Shiny web application that allows users to generate lists of Japanese words and sentences containing specific kanji characters they want to learn. Here’s an explanation of the key components:</p>
<ol type="1">
<li><strong>User Interface Definition (<code>ui</code>)</strong>:</li>
</ol>
<ul>
<li>The UI is defined using <code>fluidPage</code> layout.</li>
<li>It consists of a title panel, a sidebar layout with a sidebar panel containing download buttons and a select input to choose kanji characters, and a main panel containing tabs to display the lists of words and sentences.</li>
<li>The tabs include a list of words, a list of sentences, and a stats tab.</li>
<li>Various output elements like text, tables, and DT (DataTables) are defined to display data.</li>
</ul>
<ol start="2" type="1">
<li><strong>Server Logic (<code>server</code>)</strong>:</li>
</ol>
<ul>
<li>The server logic defines the functionality of the Shiny app.</li>
<li>It contains reactive expressions to dynamically update the output elements based on user input.</li>
<li>It defines functions to generate lists of words and sentences based on selected kanji characters (<code>make_study_list</code> and <code>make_sentences_list</code>).</li>
<li>It calculates the number of occurrences of each kanji character in the selected words and displays them in a table on the “Stats” tab.</li>
<li>It provides output functions to display the generated lists of words and sentences.</li>
<li>It includes download handlers to allow users to download the generated lists in Excel and CSV formats.</li>
</ul>
<ol start="3" type="1">
<li><strong>ShinyApp function</strong>:</li>
</ol>
<ul>
<li>The <code>shinyApp</code> function combines the UI and server logic to create the Shiny application.</li>
</ul>
<p>Overall, this Shiny app provides an interactive interface for users to explore and download lists of Japanese words and sentences containing specific kanji characters they are interested in learning.</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://www.kanjidatabase.com/index.php">Kanji database</a>.</li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>shiny</category>
  <category>exploratory</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/kanji_app/post.html</guid>
  <pubDate>Tue, 05 Mar 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Loading and Exploring Japanese Kanji Data Using R</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/kanji/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In this blog post, I’ll demonstrate how to use R to load, explore, and filter data from a dataset containing Japanese characters, known as “kanji”. The datasets were obtained from an online <a href="https://www.kanjidatabase.com/index.php">Kanji database</a>. We’ll focus on using the <code>tidyverse</code> family of packages to illustrate how to select and filter relevant information efficiently.</p>
</section>
<section id="setup-and-loading" class="level1">
<h1>Setup and Loading</h1>
<p>To begin, we need to load necessary libraries and import the datasets:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># | warning: false</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loading necessary libraries</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(here)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(janitor)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loading datasets</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">data_kanji <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv2</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/kanji"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kanji_20240227_081842.csv"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>()</span>
<span id="cb1-11"></span>
<span id="cb1-12">data_jukugo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv2</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/kanji"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jukugo_20240227_081908.csv"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>()</span></code></pre></div>
</div>
<p>Here’s a breakdown of the code:</p>
<ul>
<li><code>library(tidyverse)</code>: We load the <code>tidyverse</code> package, which includes <code>dplyr</code>, <code>ggplot2</code>, and other useful packages.</li>
<li><code>library(here)</code>: This package helps manage file paths conveniently.</li>
<li><code>library(janitor)</code>: Useful for standardizing variable names and data cleaning.</li>
<li>We use <code>read.csv2()</code> to import CSV (comma-separated value) files with semicolons (;) as separators.</li>
<li><code>here("data/kanji", "Kanji_20240227_081842.csv")</code> uses the function <code>here()</code> to access the data file, which is saved inside the folders data &gt; kanji.</li>
<li>The characters <code>%&gt;%</code> are called a “pipe” in tidyverse. It can be written simply by pressing Ctrl + Shift + M (in Windows). Basically, it tells R that we want to apply some step to the previous data. In this example, I tell R that I want to use the function <code>clean_names()</code> to the data that I’ve already loaded using <code>read.csv2()</code>.</li>
<li><code>clean_names()</code> is a <code>janitor</code> function that renames all variables in a standard format to make it easier to manipulate. Specifically, <code>clean_names()</code> sets all names to lowercase, removes punctuation and symbols, and replaces spaces with underscores.</li>
</ul>
<p>Now I have two separate datasets: one for kanji (single characters), and one for jukugo (compound words). Let’s take a look at them.</p>
</section>
<section id="exploring-the-data" class="level1">
<h1>Exploring the data</h1>
<p>Let’s examine the first few rows of each dataset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(data_kanji)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    id kanji strokes grade
1   41    一       1     1
2  124    乙       1     7
3 2060    了       2     7
4 2074    力       2     1
5 1577    二       2     1
6 1070    人       2     1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(data_jukugo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   id comp_word frequency          grammatical_feature pronunciation
1 173      一部     46289 possible to use as an adverb         itibu
2 234      一般     39274                 general noun         ippan
3 432      一時     25126 possible to use as an adverb         itizi
4 461      一番     24155 possible to use as an adverb        itiban
5 481      一緒     23453    light-verb -suru attached         issyo
6 529      一致     21388    light-verb -suru attached          itti
  english_translation position kanji kanji_id
1            one part        L    一       41
2             general        L    一       41
3         one o'clock        L    一       41
4                best        L    一       41
5            together        L    一       41
6         coincidence        L    一       41</code></pre>
</div>
</div>
<p>We’re using the base function <code>head()</code>to show the first rows or observations of our datasets.</p>
<p>We can see that <code>data_kanji</code> has four columns or variables:</p>
<ul>
<li><code>id</code> shows a unique identification number.</li>
<li><code>kanji</code> stores the actual character.</li>
<li><code>strokes</code> represents the number of distinct lines or strokes that the character has.</li>
<li><code>grade</code> means the official categorization of Kanji by educational year in Japan. Grade 1 includes the easiest or most common kanji, and it goes all up to grade 7.</li>
</ul>
<p>On the other hand, <code>data_jukugo</code> contains nine variables:</p>
<ul>
<li><code>id</code> is the identification number for jukugos.</li>
<li><code>comp_word</code> is the actual word.</li>
<li><code>frequency</code> is a measure of how many times each jukugo appear in a selected corpus of Japanese literature (extracted from Japanese newspapers).</li>
<li><code>grammatical_feature</code> gives us more context of how the word is used in grammatical terms.</li>
<li><code>pronunciation</code> tells us the pronunciation in “romaji”, or the Latin alphabet.</li>
<li><code>english_translation</code> stores the English translation.</li>
</ul>
<p>The last three variables in <code>data_jukugo</code> describes the kanji which is part of the jukugo:</p>
<ul>
<li><code>position</code> tells us if the kanji is used in left position “L” or right position “R”.</li>
<li><code>kanji</code> shows the kanji used in the jukugo. The first rows all show jukugos composed with the kanji “一”.</li>
<li><code>kanji_id</code> is the identification number of the kanji part. We can use this id to link <code>data_jukugo</code> with <code>data_kanji</code> if we want to.</li>
</ul>
<p>Another way of looking into a dataset is to explore how each variable is encoded:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_kanji)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 2,136
Columns: 4
$ id      &lt;int&gt; 41, 124, 2060, 2074, 1577, 1070, 1584, 829, 359, 1647, 1903, 1…
$ kanji   &lt;chr&gt; "一", "乙", "了", "力", "二", "人", "入", "七", "九", "八", "…
$ strokes &lt;int&gt; 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,…
$ grade   &lt;int&gt; 1, 7, 7, 1, 1, 1, 1, 1, 1, 1, 7, 3, 1, 2, 1, 2, 6, 7, 6, 1, 2,…</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_jukugo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 52,791
Columns: 9
$ id                  &lt;int&gt; 173, 234, 432, 461, 481, 529, 937, 1465, 1521, 156…
$ comp_word           &lt;chr&gt; "一部", "一般", "一時", "一番", "一緒", "一致", "…
$ frequency           &lt;int&gt; 46289, 39274, 25126, 24155, 23453, 21388, 12477, 7…
$ grammatical_feature &lt;chr&gt; "possible to use as an adverb", "general noun", "p…
$ pronunciation       &lt;chr&gt; "itibu", "ippan", "itizi", "itiban", "issyo", "itt…
$ english_translation &lt;chr&gt; "one part", "general", "one o'clock", "best", "tog…
$ position            &lt;chr&gt; "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", …
$ kanji               &lt;chr&gt; "一", "一", "一", "一", "一", "一", "一", "一", "…
$ kanji_id            &lt;int&gt; 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41…</code></pre>
</div>
</div>
<p>The <code>glimpse()</code> function allows us to quickly glance at the data structure.</p>
<p>We can see that <code>data_kanji</code> has 2,136 rows or observations and 4 columns or variables. We also see the first values of each of its four variables. More importantly, we can see which data type each variable stores. The <code>kanji</code> variable has <code>&lt;chr&gt;</code> type, which means “character” or “text”, while the rest of variables have <code>&lt;int&gt;</code> type, which means “integer” number, or a round number. R automatically detects the data types when importing data using functions like <code>read.csv2()</code>.</p>
<p>Regarding <code>data_jukugo</code>, it has 52,791 rows and 9 columns, of which 3 have <code>&lt;int&gt;</code> type, and 6 have <code>&lt;char&gt;</code> type.</p>
</section>
<section id="manipulating-the-data" class="level1">
<h1>Manipulating the data</h1>
<p>Now that I’m familiarized with this dataset, it’s useful to lay down what my analysis plan is. In other words, what do I want to learn from this data? In this case, I want to be able to find words (jukugo) that only contain kanji from a selected list of kanji that I’m learning. So, for example, if I only know kanjis 一, 人, and 十, I want to know all the possible combinations of these three kanjis.</p>
<p>For this exercise, I’m interested in separating jukugos in two parts: the left kanji, and the right kanji. The dataset already has half of this information, but sometimes it tells us the left kanji, and sometimes the right kanji (more on this later). I want to get sistematically both left and right kanjis in the same row, so I’ll create new variables called <code>kanji_left</code> and <code>kanji_right</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">data_jukugo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_jukugo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kanji_left =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(comp_word, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb10-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kanji_right =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(comp_word, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(data_jukugo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 52,791
Columns: 11
$ id                  &lt;int&gt; 173, 234, 432, 461, 481, 529, 937, 1465, 1521, 156…
$ comp_word           &lt;chr&gt; "一部", "一般", "一時", "一番", "一緒", "一致", "…
$ frequency           &lt;int&gt; 46289, 39274, 25126, 24155, 23453, 21388, 12477, 7…
$ grammatical_feature &lt;chr&gt; "possible to use as an adverb", "general noun", "p…
$ pronunciation       &lt;chr&gt; "itibu", "ippan", "itizi", "itiban", "issyo", "itt…
$ english_translation &lt;chr&gt; "one part", "general", "one o'clock", "best", "tog…
$ position            &lt;chr&gt; "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", …
$ kanji               &lt;chr&gt; "一", "一", "一", "一", "一", "一", "一", "一", "…
$ kanji_id            &lt;int&gt; 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41…
$ kanji_left          &lt;chr&gt; "一", "一", "一", "一", "一", "一", "一", "一", "…
$ kanji_right         &lt;chr&gt; "部", "般", "時", "番", "緒", "致", "定", "連", "…</code></pre>
</div>
</div>
<p>Let’s explain the code:</p>
<ul>
<li><code>mutate()</code> is the <code>dplyr</code> function used to create or change variables. Here, I create two variables, <code>kanji_left</code> and <code>kanji_right</code>.</li>
<li><code>substr()</code> is a base function that subtracts a string of text from a character variable. <code>substr(comp_word, 1, 1)</code> means to subtract only the first character, and <code>substr(comp_word, 2, 2)</code> gets the second character.</li>
</ul>
<p>Alright, now I need to define the list of kanjis that I’m currently learning. This I need to do it manually, but later I’ll explain how to do it more dinamically.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">kanji_learning <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"一"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"二"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"三"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"王"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"玉"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"十"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"五"</span>)</span></code></pre></div>
</div>
<p>Lastly, I’ll tell R to filter the jukugos that only include kanji that are on my learning list. I also want to sort the jukugos from more to less used.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">jukugo_learning <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_jukugo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(kanji_left <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> kanji_learning, kanji_right <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> kanji_learning) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(frequency))</span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(jukugo_learning)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     id comp_word frequency          grammatical_feature pronunciation
1 17059      二三        32 possible to use as an adverb         nisan
2 17059      二三        32 possible to use as an adverb         nisan
3 20330      三一        12                 general noun        sanpin
4 20330      三一        12                 general noun        sanpin
5 23443      一一         4 possible to use as an adverb        itiiti
6 23443      一一         4 possible to use as an adverb        itiiti
  english_translation position kanji kanji_id kanji_left kanji_right
1        two or three        L    二     1577         二          三
2        two or three        R    三      744         二          三
3 low-ranking samurai        R    一       41         三          一
4 low-ranking samurai        L    三      744         三          一
5          one-by-one        L    一       41         一          一
6          one-by-one        R    一       41         一          一</code></pre>
</div>
</div>
<p>The <code>filter()</code> function selects rows based on one or more conditions. I’ve passed two conditions: that <code>kanji_left</code> is included in the <code>kanji_learning</code> “list” (in R we’d call this a vector, not a list), and that <code>kanji_right</code> is also included in <code>kanji_learning</code>. The term “is included in” is represented in R with the operand <code>%in%</code>.</p>
<p>The <code>arrange()</code> function reorders the rows based on one or more variables. I’ve passed the argument <code>desc(frequency)</code> because I want the words to be sorted in descending order of frequency (from more to less frequency).</p>
<p>However, something odd has happened: now we have two copies of each jukugo. There are complete duplicates in the dataset, with the only difference of which kanji appears in the variables <code>position</code>, <code>kanji</code>, and <code>kanji_id</code>. For example, “nisan” (二三) appears twice, one with <code>position</code> L, <code>kanji</code> 二, and <code>kanji_id</code> 1577, and another with <code>position</code> R, <code>kanji</code> 三, and <code>kanji_id</code> 744. This is something that I didn’t see first time I explored the dataset.</p>
<p>I could have done things differently. Instead of splitting the jukugos manually, I could have performed a “self-join” of the duplicated rows. But one cool thing about data cleaning and analysis is that there are always different ways to reach the same goal. It’s an iterative process, and by trial and error I can learn a lot and find alternative methods of doing things.</p>
<p>Moving forward, since I’m only interested in keeping one record of each jukugo, I can drop these duplicates. Aditionally, I’ll keep only the variables I’m interested in.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">jukugo_learning <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> jukugo_learning <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, comp_word, frequency, grammatical_feature, pronunciation, english_translation, kanji_left, kanji_right) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>()</span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(jukugo_learning)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     id comp_word frequency          grammatical_feature pronunciation
1 17059      二三        32 possible to use as an adverb         nisan
2 20330      三一        12                 general noun        sanpin
3 23443      一一         4 possible to use as an adverb        itiiti
4 25773      二王         2                 general noun          nioo
          english_translation kanji_left kanji_right
1                two or three         二          三
2         low-ranking samurai         三          一
3                  one-by-one         一          一
4 the two guardian Deva kings         二          王</code></pre>
</div>
</div>
<p>I’ve used two new <code>dplyr</code> functions: <code>select()</code> keeps some columns or variables, and <code>distinct()</code> keeps only non-duplicated rows.</p>
<p>The final result contains four distinct jukugos: 二三, 三一, 一一, and 二王. All of them are very low-frequency, with the most common of them appearing only 32 times.</p>
</section>
<section id="next-step-making-it-interactive" class="level1">
<h1>Next step: making it interactive</h1>
<p>So far, I have created a code that filters Japanese kanji words based on whatever Kanji components I want. However, the whole process would be nicer if I had a way of selecting the data interactivelly, maybe pressing some buttons. We can do just that using R Shiny applications. Find how in <a href="https://carlosepistats.github.io/blog/posts/kanji_app/post.html">this post</a>!</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://www.kanjidatabase.com/index.php">Kanji database</a>.</li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>data cleaning</category>
  <category>exploratory</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/kanji/post.html</guid>
  <pubDate>Mon, 26 Feb 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Create an Alluvial Plot in R</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/alluvial_plot/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In this post, I explain how to create an alluvial plot using code in R</p>
<section id="what-is-an-alluvial-diagram" class="level2">
<h2 class="anchored" data-anchor-id="what-is-an-alluvial-diagram">What is an Alluvial Diagram</h2>
<p>An alluvial diagram or plot displays the flow of information from one categorical variable or stage to the next. The term “alluvial” refers to its resemblance to the flow of a river.</p>
</section>
<section id="uses-of-alluvial-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="uses-of-alluvial-diagrams">Uses of Alluvial Diagrams</h2>
<p>Alluvial diagrams are commonly used in the following situations:</p>
<ul>
<li>To demonstrate the number of participants in a study transitioning from one baseline category to a subsequent category. For example, the number of participants randomized at the beginning of the study and who continue to follow-up at the end. It serves as a graphical supplement to flowcharts, which present information with arrows and boxes containing text and numbers.</li>
<li>To show the distribution of participants among different categorical variables. In this case, it provides a more “visually appealing” alternative to stacked column charts.</li>
</ul>
</section>
</section>
<section id="r-code" class="level1">
<h1>R Code</h1>
<section id="preparativos" class="level2">
<h2 class="anchored" data-anchor-id="preparativos">Preparativos</h2>
<p>For this example, we will use the <code>ggalluvial</code> and <code>ggplot2</code> libraries. The data come from a study on language learning using the web application <em>LingQ</em> (<a href="http://comparelanguageapps.com/documentation/LingQ_Efficacy_2023.pdf">Link to the article</a>).</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load necessary libraries</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Includes ggplot2</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggalluvial)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Input data</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Initial =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Third"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fourth+"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb1-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Final =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Third"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fourth+"</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), </span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Frequency =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-12">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Initial =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(Initial, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Third"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fourth+"</span>)),</span>
<span id="cb1-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Final =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(Final, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Third"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fourth+"</span>))</span>
<span id="cb1-16">  )</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(data)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>  Initial   Final Frequency
1   First   First        28
2   First  Second        28
3   First   Third        10
4   First Fourth+         4
5  Second   First         3
6  Second  Second         6</code></pre>
</div>
</div>
<p>In this study, a total of 192 individuals were selected for the sample and completed the initial knowledge test. Out of these, 101 completed the final test and studied for at least two hours in the application, and were included in the analysis. The data show the equivalent language knowledge in formal education semesters (“First”, “Second”, “Third”, “Fourth or more”) at the beginning of the study (“Initial”) and after using the application (“Final”).</p>
<p><em>Note: The data have been extracted from the example article from the result tables and are just an example of a data distribution compatible with those results.</em></p>
</section>
<section id="alluvial-plot" class="level2">
<h2 class="anchored" data-anchor-id="alluvial-plot">Alluvial Plot</h2>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(Initial), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(Final),</span>
<span id="cb3-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Frequency)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Initial"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Final"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_alluvium</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Final)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_stratum</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stratum"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(stratum))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Equivalent formal education semesters"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/alluvial_plot/post_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In the alluvial diagram, the area of the colored zones is proportional to the frequency, so wider “flows” represent more participants.</p>
<p>The graph shows how the majority of the flow occurs from bottom to top; that is, knowledge tends to improve more than deteriorate. For example, more than half of the participants who started from the first semester of knowledge progressed to the second, third, or fourth semester.</p>
<p>It can also be seen that almost all participants who ended with a knowledge level equivalent to the first semester started from that previous level, and a few decreased from the second semester to the first semester.</p>
<p>In conclusion, alluvial diagrams provide a visual option for better understanding data flows between categories.</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://corybrunson.github.io/ggalluvial/">ggalluvial package</a></li>
<li><a href="http://comparelanguageapps.com/documentation/LingQ_Efficacy_2023.pdf">Language learning study with LingQ</a></li>
</ul>


</section>

 ]]></description>
  <category>ggplot</category>
  <category>plot</category>
  <category>alluvial</category>
  <category>R</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/alluvial_plot/post.html</guid>
  <pubDate>Wed, 21 Feb 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Lasso Regression</title>
  <dc:creator>Carlos Fernández</dc:creator>
  <link>https://CarlosEpiStats.github.io/blog/posts/lasso_regression/post.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In this post, I explain what Lasso regression is, what it is used for, and how to use it, with code in R.</p>
<section id="what-is-lasso-regression" class="level2">
<h2 class="anchored" data-anchor-id="what-is-lasso-regression">What is Lasso regression?</h2>
<p>Lasso regression is a modified version of linear regression whose objective is to find the simplest model possible. In order to do that, Lasso method penalizes large regression coefficients, leaving smaller coefficients and even removing some variables from the final model (i.e., setting their coefficients to zero).</p>
<p>Lasso is an acronym of <strong>L</strong>east <strong>A</strong>bsolute <strong>S</strong>hrinkage and <strong>S</strong>elector <strong>O</strong>perator.</p>
</section>
<section id="what-is-lasso-regression-used-for" class="level2">
<h2 class="anchored" data-anchor-id="what-is-lasso-regression-used-for">What is Lasso regression used for?</h2>
<p>Lasso regression is used mainly in two applications:</p>
<ul>
<li><strong>Model variable selection</strong>: Lasso can be used as a method to select the most important variables in a regression model. The least important variables will have their coefficients set to zero, effectively being removed from the final model.</li>
<li><strong>Parameter shrinkage</strong>: Lasso’s coefficients are smaller thant those of a simple lineal regression. This helps to avoid overfitting problems.</li>
</ul>
<p>Given their two main functions, Lasso regression is usually employed in the following situations:</p>
<ul>
<li>When we have a <strong>high-dimensionality</strong> dataset, i.e., with a large number of variables.</li>
<li>When we have <strong>multicolineallity</strong> in our model, i.e., several variables are lineally dependent of one another.</li>
<li>When we want to <strong>automatize the model building</strong>, via automatizing the selection of the included variables.</li>
</ul>
</section>
<section id="how-does-lasso-regression-work" class="level2">
<h2 class="anchored" data-anchor-id="how-does-lasso-regression-work">How does Lasso regression work?</h2>
<p>A traditional multivariable lineal regression model finds a set of regression coefficients (<img src="https://latex.codecogs.com/png.latex?%5Cbeta_0,%20%5Cbeta_1,%20%5Cbeta_2...">) that minimizes the residuals’ squared sum (RSS). That is, the distance between the datapoints and the model predictions.</p>
<p>Lasso regression adds another parameter called L1. L1 is defined as the sum of the absolute values of the model coefficients. Lasso method tries to minimize the sum of RSS and L1. As a consequence, Lasso finds a model with smaller regression coefficients. This whole process is known as “L1 regularization”, and it produces a coefficient “shrinkage”.</p>
<p>Every time we run a Lasso regression, whe need to specify the <strong>lambda</strong> parameter (<img src="https://latex.codecogs.com/png.latex?%5Clambda">). Lambda represents the relative importance of the L1 parameter compared to the RSS part of the minimization formula.</p>
<ul>
<li>With <img src="https://latex.codecogs.com/png.latex?%5Clambda%20=%200">, there is no coefficient shrinkage, and the Lasso model is effectively equal to a regular linear regression model.</li>
<li>As <img src="https://latex.codecogs.com/png.latex?%5Clambda"> grows, there is more shrinkage, and more variables are removed from the model.</li>
<li>If <img src="https://latex.codecogs.com/png.latex?%5Clambda"> were to be infinite, all coefficients would be removed, and we would end up with an empty model.</li>
</ul>
<section id="lasso-regression-formula" class="level3">
<h3 class="anchored" data-anchor-id="lasso-regression-formula">Lasso regression formula</h3>
<p><img src="https://latex.codecogs.com/png.latex?min(RSS%20+%20%5Clambda%20%5Csum%20%7C%5Cbeta_j%7C)"></p>
<p>Where</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?RSS"> is the residuals’ square sum.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Clambda"> is Lasso’s penalizing factor.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Csum%20%7C%5Cbeta_j%7C"> is the sum of the absolute values of the regression coefficients.</li>
</ul>
</section>
</section>
</section>
<section id="code-in-r" class="level1">
<h1>Code in R</h1>
<section id="getting-ready" class="level2">
<h2 class="anchored" data-anchor-id="getting-ready">Getting Ready</h2>
<p>In this example, we’ll use the <code>glmnet</code> library and the example dataset in <code>mtcars</code>.</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("glmnet") # Install the package (only once)</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(glmnet)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(mtcars)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>                   mpg cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1</code></pre>
</div>
</div>
<p>We’ll use <code>mpg</code> (miles per galon) as the outcome variable, and <code>cyl</code> (number of cylinders), <code>hp</code> (horsepower), <code>wt</code> (weight), <code>gear</code> (gear number), and <code>drat</code> (rear axle ratio) as predictive variables.</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the outcome variable</span></span>
<span id="cb3-2">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the predictive variables</span></span>
<span id="cb3-5">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.matrix</span>(mtcars[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cyl"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drat"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gear"</span>)])</span></code></pre></div>
</details>
</div>
</section>
<section id="choose-a-value-for-lambda" class="level2">
<h2 class="anchored" data-anchor-id="choose-a-value-for-lambda">Choose a Value for Lambda</h2>
<p>We can choose the value of <img src="https://latex.codecogs.com/png.latex?%5Clambda"> that minimizes the mean-squared error (MSE). The <code>cv.glmnet()</code> function performs “<a href="https://www.statology.org/k-fold-cross-validation/">K-fold cross-validation</a>” to identify this <img src="https://latex.codecogs.com/png.latex?%5Clambda"> value.</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cross-validation</span></span>
<span id="cb4-2">cv_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cv.glmnet</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Changing the alpha parameter leads to other types of regression</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the lambda value that minimizes the MSE</span></span>
<span id="cb4-5">best_lambda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cv_model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lambda.min</span>
<span id="cb4-6">best_lambda</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.3803991</code></pre>
</div>
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the results in a plot</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(cv_model)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://CarlosEpiStats.github.io/blog/posts/lasso_regression/post_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The value of lambda that minimizes the MSE turns out to be 0.3803991, which in the plot corresponds to the point <img src="https://latex.codecogs.com/png.latex?Log(%5Clambda)"> = -0.9665344.</p>
</section>
<section id="fitting-the-model" class="level2">
<h2 class="anchored" data-anchor-id="fitting-the-model">Fitting the Model</h2>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Model coefficients</span></span>
<span id="cb7-2">best_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> best_lambda)</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(best_model)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>6 x 1 sparse Matrix of class "dgCMatrix"
                     s0
(Intercept) 35.99744772
cyl         -0.85518839
hp          -0.01598015
wt          -2.88233444
drat         0.27858106
gear         .         </code></pre>
</div>
</div>
<p>We can observe that the coefficient of <code>gear</code> appears as a point, indicating that the Lasso regression has eliminated the coefficient since the variable was not important enough.</p>
</section>
<section id="comparison-with-linear-regression-without-lasso" class="level2">
<h2 class="anchored" data-anchor-id="comparison-with-linear-regression-without-lasso">Comparison with Linear Regression without Lasso</h2>
<p>For comparison, we can see the coefficients that would result from a multiple linear regression model without parameter shrinkage or variable selection.</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">linear_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> cyl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> hp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> wt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> drat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gear, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span>
<span id="cb9-2">model_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(best_model), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(linear_model))</span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(model_table) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lasso"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Linear"</span>)</span>
<span id="cb9-4">model_table</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>6 x 2 sparse Matrix of class "dgCMatrix"
                  Lasso      Linear
(Intercept) 35.99744772 33.99417771
cyl         -0.85518839 -0.72169272
hp          -0.01598015 -0.02227636
wt          -2.88233444 -2.92715539
drat         0.27858106  0.73105753
gear         .           0.16750690</code></pre>
</div>
</div>
<p>The coefficients of the Lasso model have been shrunk slightly, especially for the <code>drat</code> variable, and the <code>gear</code> variable has been automatically excluded.</p>
</section>
</section>
<section id="questions-and-curiosities" class="level1">
<h1>Questions and Curiosities</h1>
<p>Some questions arise for further investigation and writing new posts:</p>
<ul>
<li>How to choose the value of lambda?</li>
<li>How does the method of K-fold cross-validation work?</li>
<li>What sets Lasso apart from other similar models like Ridge?</li>
<li>What is the utility of Lasso regression in the field of public health? What databases can be used as an example?</li>
<li>What articles in the public health field are published using this methodology?</li>
</ul>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://www.statology.org/lasso-regression-in-r/">Statology</a></li>
<li><a href="https://www.geeksforgeeks.org/lasso-regression-in-r-programming/">Geeks for Geeks</a></li>
</ul>


</section>

 ]]></description>
  <category>regression</category>
  <category>R</category>
  <category>lasso</category>
  <guid>https://CarlosEpiStats.github.io/blog/posts/lasso_regression/post.html</guid>
  <pubDate>Mon, 05 Feb 2024 23:00:00 GMT</pubDate>
</item>
</channel>
</rss>
